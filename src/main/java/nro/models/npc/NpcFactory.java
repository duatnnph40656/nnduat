package nro.models.npc;

import nro.attr.Attribute;
import nro.attr.AttributeManager;
import nro.consts.*;
import nro.dialog.ConfirmDialog;
import nro.dialog.MenuDialog;
import nro.jdbc.daos.PlayerDAO;
import nro.lib.RandomCollection;
import nro.models.boss.Boss;
import nro.models.boss.BossFactory;
import nro.models.boss.BossManager;
import nro.models.boss.event.EscortedBoss;
import nro.models.boss.event.Qilin;
import nro.models.clan.Clan;
import nro.models.clan.ClanMember;
import nro.models.consignment.ConsignmentShop;
import nro.models.item.Item;
import nro.models.item.ItemOption;
import nro.models.item.ItemTemplate;
import nro.models.map.ItemMap;
import nro.models.map.Map;
import nro.models.map.SantaCity;
import nro.models.map.Zone;
import nro.models.map.challenge.MartialCongressService;
import nro.models.map.dungeon.SnakeRoad;
import nro.models.map.dungeon.zones.ZSnakeRoad;
import nro.models.map.mabu.MabuWar;
import nro.models.map.phoban.BanDoKhoBau;
import nro.models.map.phoban.DoanhTrai;
import nro.models.map.war.BlackBallWar;
import nro.models.map.war.NamekBallWar;
import nro.models.player.Inventory;
import nro.models.player.NPoint;
import nro.models.player.Player;
import nro.models.skill.Skill;
import nro.noti.NotiManager;
import nro.server.Maintenance;
import nro.server.Manager;
import nro.server.ServerManager;
import nro.server.io.Message;
import nro.services.*;
import nro.services.func.*;
import nro.utils.Log;
import nro.utils.SkillUtil;
import nro.utils.TimeUtil;
import nro.utils.Util;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.stream.Collectors;

import static nro.server.Manager.*;
import static nro.services.func.SummonDragon.*;

/**
 * @author üíñ Tr·∫ßn L·∫°i üíñ
 * @copyright üíñ GirlkuN üíñ
 */
public class NpcFactory {

    private static boolean nhanVang = true;
    private static boolean nhanDeTu = true;

    // playerid - object
    public static final java.util.Map<Long, Object> PLAYERID_OBJECT = new HashMap<Long, Object>();

    private NpcFactory() {

    }

    public static Npc createNPC(int mapId, int status, int cx, int cy, int tempId, int avartar) {
        Npc npc = null;
        try {
            switch (tempId) {
                case ConstNpc.TORIBOT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ª≠a h√†ng ƒë√° q√∫y s·ªë 1 th·ªùi ƒë·∫°i", "C·ª≠a H√†ng");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_TORIBOT, 0, -1);
                            }
                        }
                    };
                    break;
                case ConstNpc.NGO_KHONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Chu mi nga", "T·∫∑ng qu·∫£\nH·ªìng ƒë√†o\nCh√≠n");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                int itemNeed = ConstItem.QUA_HONG_DAO_CHIN;
                                Item item = InventoryService.gI().findItemBagByTemp(player, itemNeed);
                                if (item != null) {
                                    RandomCollection<Integer> rc = Manager.HONG_DAO_CHIN;
                                    int itemID = rc.next();
                                    int x = cx + Util.nextInt(-50, 50);
                                    int y = player.zone.map.yPhysicInTop(x, cy - 24);
                                    int quantity = 1;
                                    if (itemID == ConstItem.HONG_NGOC) {
                                        quantity = Util.nextInt(1, 2);
                                    }
                                    InventoryService.gI().subQuantityItemsBag(player, item, 1);
                                    InventoryService.gI().sendItemBags(player);
                                    ItemMap itemMap = new ItemMap(player.zone, itemID, quantity, x, y, player.id);
                                    Service.getInstance().dropItemMap(player.zone, itemMap);
                                    npcChat(player.zone, "Xie xie");
                                } else {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng t√¨m th·∫•y!");
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DUONG_TANG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (this.mapId == MapName.LANG_ARU) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y gi√∫p gi·∫£i c·ª©u ƒë·ªì ƒë·ªá c·ªßa b·∫ßn tƒÉng ƒëang b·ªã phong ·∫•n t·∫°i ng≈© h√†nh s∆°n.",
                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                            }
                            if (this.mapId == MapName.NGU_HANH_SON_3) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y thu th·∫≠p b√πa 'gi·∫£i khai phong ·∫•n', m·ªói ch·ªØ 10 c√°i.",
                                        "V·ªÅ\nL√†ng Aru", "T·ª´ ch·ªëi");
                            }
                            if (this.mapId == MapName.NGU_HANH_SON) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y thu th·∫≠p b√πa 'gi·∫£i khai phong ·∫•n', m·ªói ch·ªØ 10 c√°i.",
                                        "ƒê·ªïi ƒë√†o ch√≠n", "Gi·∫£i phong ·∫•n", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == MapName.LANG_ARU) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:

                                                if (!Manager.gI().getGameConfig().isOpenPrisonPlanet()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "L·ªëi v√†o ng≈© h√†nh s∆°n ch∆∞a m·ªü");
                                                    return;
                                                }

                                                Zone zone = MapService.gI().getZoneJoinByMapIdAndZoneId(player, 124, 0);
                                                if (zone != null) {
                                                    player.location.x = 100;
                                                    player.location.y = 384;
                                                    MapService.gI().goToMap(player, zone);
                                                    Service.getInstance().clearMap(player);
                                                    zone.mapInfo(player);
                                                    player.zone.loadAnotherToMe(player);
                                                    player.zone.load_Me_To_Another(player);
                                                }
                                                // Service.getInstance().sendThongBao(player, "L·ªëi v√†o ng≈© h√†nh s∆°n ch∆∞a
                                                // m·ªü");
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == MapName.NGU_HANH_SON_3) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                Zone zone = MapService.gI().getZoneJoinByMapIdAndZoneId(player, 0, 0);
                                                if (zone != null) {
                                                    player.location.x = 600;
                                                    player.location.y = 432;
                                                    MapService.gI().goToMap(player, zone);
                                                    Service.getInstance().clearMap(player);
                                                    zone.mapInfo(player);
                                                    player.zone.loadAnotherToMe(player);
                                                    player.zone.load_Me_To_Another(player);
                                                }
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == MapName.NGU_HANH_SON) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                // ƒê·ªïi ƒë√†o
                                                Item item = InventoryService.gI().findItemBagByTemp(player,
                                                        ConstItem.QUA_HONG_DAO);
                                                if (item == null || item.quantity < 10) {
                                                    npcChat(player,
                                                            "C·∫ßn 10 qu·∫£ ƒë√†o xanh ƒë·ªÉ ƒë·ªïi l·∫•y ƒë√†o ch√≠n t·ª´ b·∫ßn tƒÉng.");
                                                    return;
                                                }
                                                if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                    npcChat(player, "T√∫i ƒë·∫ßy r·ªìi k√¨a.");
                                                    return;
                                                }
                                                Item newItem = ItemService.gI()
                                                        .createNewItem((short) ConstItem.QUA_HONG_DAO_CHIN, 1);
                                                InventoryService.gI().subQuantityItemsBag(player, item, 10);
                                                InventoryService.gI().addItemBag(player, newItem);
                                                InventoryService.gI().sendItemBags(player);
                                                npcChat(player,
                                                        "Ta ƒë√£ ƒë·ªïi cho th√≠ ch·ªß r·ªìi ƒë√≥, h√£y mang cho ƒë·ªá t·ª≠ ta ƒëi n√†o.");
                                                break;

                                            case 1:
                                                // gi·∫£i phong ·∫•n
                                                if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                    npcChat(player, "T√∫i ƒë·∫ßy r·ªìi k√¨a.");
                                                    return;
                                                }
                                                int[] itemsNeed = {ConstItem.CHU_GIAI, ConstItem.CHU_KHAI,
                                                    ConstItem.CHU_PHONG, ConstItem.CHU_AN};
                                                List<Item> items = InventoryService.gI().getListItem(player, itemsNeed)
                                                        .stream().filter(i -> i.quantity >= 10)
                                                        .collect(Collectors.toList());
                                                boolean[] flags = new boolean[4];
                                                for (Item i : items) {
                                                    switch ((int) i.template.id) {
                                                        case ConstItem.CHU_GIAI:
                                                            flags[0] = true;
                                                            break;

                                                        case ConstItem.CHU_KHAI:
                                                            flags[1] = true;
                                                            break;

                                                        case ConstItem.CHU_PHONG:
                                                            flags[2] = true;
                                                            break;

                                                        case ConstItem.CHU_AN:
                                                            flags[3] = true;
                                                            break;
                                                    }
                                                }
                                                for (int i = 0; i < flags.length; i++) {
                                                    if (!flags[i]) {
                                                        ItemTemplate template = ItemService.gI()
                                                                .getTemplate(itemsNeed[i]);
                                                        npcChat("Th√≠ ch·ªß c√≤n thi·∫øu " + template.name);
                                                        return;
                                                    }
                                                }

                                                for (Item i : items) {
                                                    InventoryService.gI().subQuantityItemsBag(player, i, 10);
                                                }

                                                RandomCollection<Integer> rc = new RandomCollection<>();
                                                rc.add(10, ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU);
                                                rc.add(10, ConstItem.CAI_TRANG_BAT_GIOI_DE_TU);
                                                rc.add(50, ConstItem.GAY_NHU_Y);
                                                switch (player.gender) {
                                                    case ConstPlayer.TRAI_DAT:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG);
                                                        break;

                                                    case ConstPlayer.NAMEC:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG_545);
                                                        break;

                                                    case ConstPlayer.XAYDA:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG_546);
                                                        break;
                                                }
                                                int itemID = rc.next();
                                                Item nItem = ItemService.gI().createNewItem((short) itemID);
                                                boolean all = itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_BAT_GIOI_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_545
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_546;
                                                if (all) {
                                                    nItem.itemOptions.add(new ItemOption(50, Util.nextInt(20, 35)));
                                                    nItem.itemOptions.add(new ItemOption(77, Util.nextInt(20, 35)));
                                                    nItem.itemOptions.add(new ItemOption(103, Util.nextInt(20, 35)));
                                                    nItem.itemOptions.add(new ItemOption(94, Util.nextInt(5, 10)));
                                                    nItem.itemOptions.add(new ItemOption(100, Util.nextInt(10, 20)));
                                                    nItem.itemOptions.add(new ItemOption(101, Util.nextInt(10, 20)));
                                                }
                                                if (itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_545
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_546) {
                                                    nItem.itemOptions.add(new ItemOption(80, Util.nextInt(5, 15)));
                                                    nItem.itemOptions.add(new ItemOption(81, Util.nextInt(5, 15)));
                                                    nItem.itemOptions.add(new ItemOption(106, 0));
                                                } else if (itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_BAT_GIOI_DE_TU) {
                                                    nItem.itemOptions.add(new ItemOption(197, 0));
                                                }
                                                if (all) {
                                                    if (Util.isTrue(499, 500)) {
                                                        nItem.itemOptions.add(new ItemOption(93, Util.nextInt(3, 30)));
                                                    }
                                                } else if (itemID == ConstItem.GAY_NHU_Y) {
                                                    RandomCollection<Integer> rc2 = new RandomCollection<>();
                                                    rc2.add(60, 30);
                                                    rc2.add(30, 90);
                                                    rc2.add(10, 365);
                                                    nItem.itemOptions.add(new ItemOption(93, rc2.next()));
                                                }
                                                InventoryService.gI().addItemBag(player, nItem);
                                                InventoryService.gI().sendItemBags(player);
                                                npcChat(player.zone,
                                                        "A mi ph√≤ ph√≤, ƒëa t·∫° th√≠ ch·ªß t∆∞∆°ng tr·ª£, xin h√£y nh·∫≠n m√≥n qu√† m·ªçn n√†y, b·∫ßn tƒÉng s·∫Ω ni·ªám ch√∫ gi·∫£i tho√°t cho Ng·ªô Kh√¥ng");
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TAPION:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 19) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "√Åc qu·ª∑ truy·ªÅn thuy·∫øt Hirudegarn\nƒë√£ tho√°t kh·ªèi phong ·∫•n ng√†n nƒÉm\nH√£y gi√∫p t√¥i ch·∫ø ng·ª± n√≥",
                                            "OK", "T·ª´ ch·ªëi");
                                }
                                if (this.mapId == 126) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "T√¥i s·∫Ω ƒë∆∞a b·∫°n v·ªÅ", "OK",
                                            "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 19) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                SantaCity santaCity = (SantaCity) MapService.gI().getMapById(126);
                                                if (santaCity != null) {
                                                    if (!santaCity.isOpened() || santaCity.isClosed()) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "H·∫πn g·∫∑p b·∫°n l√∫c 22h m·ªói ng√†y");
                                                        return;
                                                    }
                                                    santaCity.enter(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "C√≥ l·ªói x·∫£y ra!");
                                                }
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 126) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                SantaCity santaCity = (SantaCity) MapService.gI().getMapById(126);
                                                if (santaCity != null) {
                                                    santaCity.leave(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "C√≥ l·ªói x·∫£y ra!");
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.MR_POPO:

                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ta l√† ng∆∞·ªùi ƒëang gi·ªØ r∆∞∆°ng qu√† cho ng∆∞∆°i, n·∫øu c√≥ b·∫•t k√¨ m√≥n qu√† n√†o h√£y t·ªõi g·∫∑p ta ƒë·ªÉ nh·∫≠n."
                                            + "\n Nh·ªõ nh·∫≠n ngay ƒë·ªÉ kh√¥ng b·ªã m·∫•t khi c√≥ qu√† m·ªõi nh√©!",
                                            "R∆∞∆°ng\nQu√† t·∫∑ng", "B·∫£ng\n x·∫øp h·∫°ng", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ShopService.gI().openBoxItemReward(player);
                                                break;
                                            case 1:
                                                Service.getInstance().showTopPower(player);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };

                    break;
                case ConstNpc.LY_TIEU_NUONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o, ta c√≥ m·ªôt s·ªë v·∫≠t ph·∫©m ƒë·∫∑t bi·ªát c·∫≠u c√≥ mu·ªën xem kh√¥ng?\n"
                                        + "S·ªë ti·ªÅn n·∫°p t√≠ch l≈©y c·ªßa b·∫°n hi·ªán t·∫°i l√†: "
                                        + player.event.getDiemTichLuy()
                                        + "\nM·ªëc qu√† t√≠ch l≈©y ti·∫øp theo b·∫°n c√≥ th·ªÉ nh·∫≠n: "
                                        + (player.event.getMocNapDaNhan() == 9 ? "ƒë√£ nh·∫≠n h·∫øt"
                                        : player.event.getMocNapDaNhan() + 1),
                                        "C·ª≠a h√†ng", "Nh·∫≠n Qu√†\nN·∫°p T√≠ch L≈©y");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: // shop
                                                // Service.getInstance().sendThongBao(player, "S·ª± ki·ªán ƒë√£ k·∫øt th√∫c. H·∫πn
                                                // g·∫∑p l·∫°i!");
                                                ShopService.gI().openShopSpecial(player, this,
                                                        ConstNpc.SHOP_LY_TIEU_NUONG, 0, -1);
                                                break;
                                            case 1:
                                                if (InventoryService.gI().getCountEmptyBag(player) <= 1) {
                                                    this.npcChat(player,
                                                            "B·∫°n c·∫ßn √≠t nh·∫•t 2 √¥ trong h√†nh trang ƒë·ªÉ c√≥ th·ªÉ nh·∫≠n qu√†");
                                                    return;
                                                }
                                                int diemTichLuy = player.event.getDiemTichLuy();
                                                int mocNapDaNhan = player.event.getMocNapDaNhan();
                                                if (diemTichLuy >= 10000) {
                                                    Item item = null;
                                                    int ruby = 0;
                                                    if (diemTichLuy >= 10000 && mocNapDaNhan == 0) {
                                                        player.event.setMocNapDaNhan(1);
                                                        ruby = 20;
                                                    } else if (diemTichLuy >= 20000 && mocNapDaNhan == 1) {
                                                        item = ItemService.gI()
                                                                .createNewItem((short) ConstItem.THOI_VANG, 50);
                                                        player.event.setMocNapDaNhan(2);
                                                    } else if (diemTichLuy >= 50000 && mocNapDaNhan == 2) {
                                                        item = ItemService.gI().createNewItem(
                                                                (short) ConstItem.CAPSULE_THOI_TRANG_30_NGAY);
                                                        item.itemOptions.add(new ItemOption(30, 0));
                                                        player.event.setMocNapDaNhan(3);
                                                    } else if (diemTichLuy >= 100000 && mocNapDaNhan == 3) {
                                                        ruby = 300;
                                                        player.event.setMocNapDaNhan(4);
                                                    } else if (diemTichLuy >= 200000 && mocNapDaNhan == 4) {
                                                        short[] listPet = {ConstItem.HO_MAP_VANG,
                                                            ConstItem.HO_MAP_TRANG, ConstItem.HO_MAP_XANH,
                                                            ConstItem.LINH_BAO_VE_TAM_GIAC,
                                                            ConstItem.LINH_BAO_VE_TRON, ConstItem.LINH_BAO_VE_VUONG,
                                                            ConstItem.BUP_BE, ConstItem.PET_KHI_BONG_BONG,
                                                            ConstItem.PET_THO_OM, ConstItem.PET_THO_OM};
                                                        item = ItemService.gI().createNewItem(
                                                                listPet[Util.nextInt(0, listPet.length - 1)]);
                                                        item.itemOptions.add(new ItemOption(50, 15));
                                                        item.itemOptions.add(new ItemOption(77, 15));
                                                        item.itemOptions.add(new ItemOption(103, 15));
                                                        player.event.setMocNapDaNhan(5);
                                                    } else if (diemTichLuy >= 300000 && mocNapDaNhan == 5) {
                                                        ruby = 500;
                                                        player.event.setMocNapDaNhan(6);
                                                    } else if (diemTichLuy >= 500000 && mocNapDaNhan == 6) {
                                                        item = ItemService.gI().createNewItem(
                                                                (short) Util.nextInt(ConstItem.THO_HONG_BUN_MA,
                                                                        ConstItem.THO_DEN_ANDROID_18));
                                                        item.itemOptions.add(new ItemOption(77, 40));
                                                        item.itemOptions.add(new ItemOption(103, 40));
                                                        item.itemOptions.add(new ItemOption(50, 40));
                                                        item.itemOptions.add(new ItemOption(117, 20));
                                                        player.event.setMocNapDaNhan(7);
                                                    } else if (diemTichLuy >= 1000000 && mocNapDaNhan == 7) {
                                                        item = ItemService.gI().createNewItem((short) Util
                                                                .nextInt(ConstItem.TANJIRO, ConstItem.NEZUKO));
                                                        item.itemOptions.add(new ItemOption(77, 45));
                                                        item.itemOptions.add(new ItemOption(103, 45));
                                                        item.itemOptions.add(new ItemOption(50, 45));
                                                        item.itemOptions.add(new ItemOption(5, 30));
                                                        int num = -1;
                                                        switch (item.template.id) {
                                                            case ConstItem.TANJIRO:
                                                                num = 190;
                                                                break;
                                                            case ConstItem.INOSUKE_HASHIBIRA:
                                                                num = 191;
                                                                break;
                                                            case ConstItem.INOSUKE:
                                                                num = 192;
                                                                break;
                                                            case ConstItem.ZENITSU:
                                                                num = 193;
                                                                break;
                                                            case ConstItem.NEZUKO:
                                                                num = 189;
                                                                break;
                                                        }
                                                        item.itemOptions.add(new ItemOption(num, 0));

                                                        Item phl = ItemService.gI()
                                                                .createNewItem((short) ConstItem.PHUONG_HOANG_LUA);
                                                        phl.itemOptions.add(new ItemOption(74, 0));
                                                        InventoryService.gI().addItemBag(player, phl);
                                                        player.event.setMocNapDaNhan(8);
                                                    } else if (diemTichLuy >= 1000000 && mocNapDaNhan == 8) {
                                                        item = ItemService.gI()
                                                                .createNewItem((short) ConstItem.DIEU_RONG);
                                                        item.itemOptions.add(new ItemOption(77, 30));
                                                        item.itemOptions.add(new ItemOption(103, 30));
                                                        item.itemOptions.add(new ItemOption(50, 30));
                                                        player.event.setMocNapDaNhan(9);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Truy c·∫≠p trang ch·ªß n·∫°p th√™m ƒëi b·∫°n √™i");
                                                    }
                                                    if (item != null || ruby != 0) {
                                                        if (item != null) {
                                                            InventoryService.gI().addItemBag(player, item);
                                                        }
                                                        player.inventory.ruby += ruby;
                                                        Service.getInstance()
                                                                .sendThongBao(player, "Nh·∫≠n qu√† n·∫°p m·ªëc "
                                                                        + mocNapDaNhan++
                                                                        + " th√†nh c√¥ng,ch√∫c b·∫°n ch∆°i game vui v·∫ª");
                                                        InventoryService.gI().sendItemBags(player);
                                                        PlayerService.gI().sendInfoHpMpMoney(player);
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Truy c·∫≠p trang ch·ªß ƒë·ªÉ n·∫°p ti·ªÅn v√† nh·∫≠n c√°c ph·∫ßn qu√† c·ª±c k√¨ h·∫•p d·∫´n");
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUY_LAO_KAME:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                EscortedBoss escortedBoss = player.getEscortedBoss();
                                if (escortedBoss != null && escortedBoss instanceof Qilin) {
                                    this.createOtherMenu(player, ConstNpc.ESCORT_QILIN_MENU,
                                            "Ah con ƒë√£ t√¨m th·∫•y l√¢n con th·∫•t l·∫°c c·ªßa ta\nTa s·∫Ω th∆∞·ªüng cho con 1 vi√™n Capsule T·∫øt 2023.",
                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                } else {
                                    if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Ch√†o con, con mu·ªën ta gi√∫p g√¨ n√†o?", "B·∫£n ƒë·ªì\nkho b√°u",
                                                "Gi·∫£i t√°n\nbang h·ªôi", getMenuSuKien(Manager.EVENT_SEVER),
                                                "Shop H·ªìng Ng·ªçc", "V√†o map\nbang h·ªôi", "T·ª´ ch·ªëi");
                                        // "ƒê·ªïi Qu√†\nS·ª± Ki·ªán",
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            if (player.clan != null) {
                                                if (player.clan.banDoKhoBau != null) {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPENED_DBKB,
                                                            "Bang h·ªôi c·ªßa con ƒëang ƒëi t√¨m kho b√°u d∆∞·ªõi bi·ªÉn c·∫•p ƒë·ªô "
                                                            + player.clan.banDoKhoBau.level
                                                            + "\nCon c√≥ mu·ªën ƒëi theo kh√¥ng?",
                                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_DBKB,
                                                            "ƒê√¢y l√† b·∫£n ƒë·ªì kho b√°u h·∫£i t·∫∑c t√≠ hon\nC√°c con c·ª© y√™n t√¢m l√™n ƒë∆∞·ªùng\n"
                                                            + "·ªû ƒë√¢y c√≥ ta lo\nNh·ªõ ch·ªçn c·∫•p ƒë·ªô v·ª´a s·ª©c m√¨nh nh√©",
                                                            "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                }
                                            } else {
                                                this.npcChat(player, "Con ph·∫£i c√≥ bang h·ªôi ta m·ªõi c√≥ th·ªÉ cho con ƒëi");
                                            }
                                            break;

                                        case 1:
                                            // Service.getInstance().sendThongBao(player, "T√≠nh nƒÉng t·∫°m b·∫£o tr√¨.");
                                            if (player.clan != null) {
                                                ClanService.gI().RemoveClanAll(player);
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng c√≥ bang h·ªôi n√†o ƒë·ªÉ gi·∫£i t√°n.");
                                            }
                                            break;
                                        case 2:
                                            switch (Manager.EVENT_SEVER) {
                                                case 1:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "S·ª± ki·ªán Halloween ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                            + Manager.SERVER_NAME + "\n"
                                                            + "Chu·∫©n b·ªã x10 nguy√™n li·ªáu K·∫πo, B√°nh Quy, B√≠ ng√¥ ƒë·ªÉ ƒë·ªïi Gi·ªè K·∫πo cho ta nh√©\n"
                                                            + "Nguy√™n Li·ªáu thu th·∫≠p b·∫±ng c√°ch ƒë√°nh qu√°i t·∫°i c√°c h√†nh tinh ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh\n"
                                                            + "T√≠ch l≈©y 3 Gi·ªè K·∫πo +  3 V√© mang qua ƒë√¢y ta s·∫Ω cho con 1 H·ªôp Ma Qu·ª∑\n"
                                                            + "T√≠ch l≈©y 3 Gi·ªè K·∫πo, 3 H·ªôp Ma Qu·ª∑ + 3 V√© \nmang qua ƒë√¢y ta s·∫Ω cho con 1 h·ªôp qu√† th√∫ v·ªã.",
                                                            "ƒê·ªïi\nGi·ªè K·∫πo", "ƒê·ªïi H·ªôp\nMa Qu·ª∑", "ƒê·ªïi H·ªôp\nQu√† Halloween",
                                                            "T·ª´ ch·ªëi");
                                                    break;
                                                case 2:
                                                    Attribute at = ServerManager.gI().getAttributeManager()
                                                            .find(ConstAttribute.VANG);
                                                    String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                            + Manager.SERVER_NAME + "\n "
                                                            + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                            + player.event.getEventPoint()
                                                            + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                            + EVENT_COUNT_QUY_LAO_KAME % 999 + "/999";
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            at != null && !at.isExpired() ? text
                                                            + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c nh√¢n ƒë√¥i s·ªë v√†ng r∆°i ra t·ª´ qu√°i,th·ªùi gian c√≤n l·∫°i "
                                                            + at.getTime() / 60 + " ph√∫t."
                                                            : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c nh√¢n ƒë√¥i s·ªë v√†ng r∆°i ra t·ª´ qu√°i trong 60 ph√∫t",
                                                            "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                            "ƒê·ªïi\nH·ªôp qu√†");
                                                    break;
                                                case 3:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "S·ª± ki√™n gi√°ng sinh 2022 " + Manager.SERVER_NAME
                                                            + "\nKhi ƒë·ªôi m≈© len b·∫•t k√¨ ƒë√°nh qu√°i s·∫Ω c√≥ c∆° h·ªôi nh·∫≠n ƒë∆∞·ª£c k·∫πo gi√°ng sinh"
                                                            + "\nƒêem 99 k·∫πo gi√°ng sinh t·ªõi ƒë√¢y ƒë·ªÉ ƒë·ªïi 1 V·ªõ,t·∫•t gi√°ng sinh\nCh√∫c b·∫°n m·ªôt m√πa gi√°ng sinh vui v·∫ª",
                                                            "ƒê·ªïi\nT·∫•t gi√°ng sinh");

                                                    break;
                                                case 4:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "S·ª± ki√™n T·∫øt nguy√™n ƒë√°n 2023 " + Manager.SERVER_NAME
                                                            + "\nB·∫°n ƒëang c√≥: " + player.event.getEventPoint()
                                                            + " ƒëi·ªÉm s·ª± ki·ªán\nCh√∫c b·∫°n nƒÉm m·ªõi dui d·∫ª",
                                                            "Nh·∫≠n L√¨x√¨", "ƒê·ªïi ƒêi·ªÉm\nS·ª± Ki·ªán");
                                                    break;
                                                case 5:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "S·ª± ki·ªán 8/3 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                            + Manager.SERVER_NAME + "\nB·∫°n ƒëang c√≥: "
                                                            + player.event.getEventPoint()
                                                            + " ƒëi·ªÉm s·ª± ki·ªán\nCh√∫c b·∫°n ch∆°i game dui d·∫ª",
                                                            "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                            "ƒê·ªïi Capsule");
                                                    break;
                                            }
                                            break;
                                        case 3:
                                            ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_HONG_NGOC, 0,
                                                    -1);
                                            break;
                                        case 4:
                                            if (player.clan == null) {
                                                Service.getInstance().sendThongBao(player, "Ch∆∞a c√≥ bang h·ªôi");
                                                return;
                                            }
                                            ChangeMapService.gI().changeMap(player, player.clan.getClanArea(), 910,
                                                    190);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                    openMenuSuKien(player, this, tempId, select);
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPENED_DBKB) {
                                    switch (select) {
                                        case 0:
                                            if (player.isAdmin()
                                                    || player.nPoint.power >= BanDoKhoBau.POWER_CAN_GO_TO_DBKB) {
                                                ChangeMapService.gI().goToDBKB(player);
                                            } else {
                                                this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                            }
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_DBKB) {
                                    switch (select) {
                                        case 0:
                                            if (player.isAdmin()
                                                    || player.nPoint.power >= BanDoKhoBau.POWER_CAN_GO_TO_DBKB) {
                                                Input.gI().createFormChooseLevelBDKB(player);
                                            } else {
                                                this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                            }
                                            break;
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_ACCEPT_GO_TO_BDKB) {
                                    switch (select) {
                                        case 0:
                                            BanDoKhoBauService.gI().openBanDoKhoBau(player,
                                                    Byte.parseByte(String.valueOf(PLAYERID_OBJECT.get(player.id))));
                                            break;
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.ESCORT_QILIN_MENU) {
                                    switch (select) {
                                        case 0: {
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                this.npcChat(player,
                                                        "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang ta m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                return;
                                            }
                                            EscortedBoss escortedBoss = player.getEscortedBoss();
                                            if (escortedBoss != null) {
                                                escortedBoss.stopEscorting();
                                                Item item = ItemService.gI()
                                                        .createNewItem((short) ConstItem.CAPSULE_TET_2022);
                                                item.quantity = 1;
                                                InventoryService.gI().addItemBag(player, item);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + item.template.name);
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TRUONG_LAO_GURU:
                case ConstNpc.VUA_VEGETA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                EscortedBoss escortedBoss = player.getEscortedBoss();
                                if (escortedBoss != null && escortedBoss instanceof Qilin) {
                                    this.createOtherMenu(player, ConstNpc.ESCORT_QILIN_MENU,
                                            "Ah con ƒë√£ t√¨m th·∫•y l√¢n con th·∫•t l·∫°c c·ªßa ta\nTa s·∫Ω th∆∞·ªüng cho con 1 vi√™n Capsule T·∫øt 2023.",
                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                } else {
                                    if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        super.openBaseMenu(player);
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.ESCORT_QILIN_MENU) {
                                    switch (select) {
                                        case 0: {
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                this.npcChat(player,
                                                        "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang ta m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                return;
                                            }
                                            EscortedBoss escortedBoss = player.getEscortedBoss();
                                            if (escortedBoss != null) {
                                                escortedBoss.stopEscorting();
                                                Item item = ItemService.gI()
                                                        .createNewItem((short) ConstItem.CAPSULE_TET_2022);
                                                item.quantity = 1;
                                                InventoryService.gI().addItemBag(player, item);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + item.template.name);
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.ONG_GOHAN:
                case ConstNpc.ONG_MOORI:
                case ConstNpc.ONG_PARAGUS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Con c·ªë g·∫Øng theo %1 h·ªçc th√†nh t√†i, ƒë·ª´ng lo l·∫Øng cho ta.".replaceAll("%1",
                                                    player.gender == ConstPlayer.TRAI_DAT ? "Quy l√£o Kam√™"
                                                            : player.gender == ConstPlayer.NAMEC ? "Tr∆∞·ªüng l√£o Guru"
                                                                    : "Vua Vegeta"),
                                            "Nh·∫≠n qu√†\nt√¢n th·ªß", "Nh·∫≠n V√†ng");
                                    // , "ƒê·ªïi\nM·∫≠t Kh·∫©u"
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            this.createOtherMenu(player, ConstNpc.QUA_TAN_THU,
                                                    "√îng c√≥ qu√† cho con ƒë√¢y n√†y", "Nh·∫≠n 100k\nNg·ªçc xanh",
                                                    "Nh·∫≠n\nƒê·ªá t·ª≠");
                                            break;
                                        case 1:
                                            if (player.getSession().goldBar > 0) {
                                                this.createOtherMenu(player, ConstNpc.MENU_PHAN_THUONG,
                                                        "Ta ƒëang gi·ªØ cho con " + player.getSession().goldBar
                                                        + " th·ªèi v√†ng, con c√≥ nh·∫≠n lu√¥n kh√¥ng?",
                                                        "Nh·∫≠n " + player.getSession().goldBar + "\nth·ªèi v√†ng",
                                                        "T·ª´ ch·ªëi");
                                                // "R∆∞∆°ng Qu√†",
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_PHAN_THUONG,
                                                        "Hi·ªán t·∫°i √¥ng kh√¥ng gi·ªØ c·ªßa con th·ªèi v√†ng n√†o c·∫£!", "T·ª´ ch·ªëi");
                                                // "M·ªü r∆∞∆°ng\nqu√†",
                                            }
                                            break;
                                        case 2:
                                            // Input.gI().createFormChangePassword(player);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.QUA_TAN_THU) {
                                    switch (select) {
                                        case 0:
                                            // if (!player.gift.gemTanThu) {
                                            if (true) {
                                                player.inventory.gem = 200000;
                                                Service.getInstance().sendMoney(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 100K ng·ªçc xanh");
                                                player.gift.gemTanThu = true;
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "Con ƒë√£ nh·∫≠n ph·∫ßn qu√† n√†y r·ªìi m√†", "ƒê√≥ng");
                                            }
                                            break;
                                        // case 1:
                                        // if (nhanVang) {
                                        // player.inventory.gold = Inventory.LIMIT_GOLD;
                                        // Service.getInstance().sendMoney(player);
                                        // Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 2 t·ªâ v√†ng");
                                        // } else {
                                        // this.npcChat("T√≠nh nƒÉng Nh·∫≠n v√†ng ƒë√£ ƒë√≥ng.");
                                        // }
                                        // break;
                                        case 1:
                                            if (nhanDeTu) {
                                                if (player.pet == null) {
                                                    PetService.gI().createNormalPet(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒë·ªá t·ª≠");
                                                } else {
                                                    this.npcChat("Con ƒë√£ nh·∫≠n ƒë·ªá t·ª≠ r·ªìi");
                                                }
                                            } else {
                                                this.npcChat("T√≠nh nƒÉng Nh·∫≠n ƒë·ªá t·ª≠ ƒë√£ ƒë√≥ng.");
                                            }
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHAN_THUONG) {
                                    switch (select) {
                                        // case 0:
                                        // ShopService.gI().openBoxItemReward(player);
                                        // break;
                                        case 0:
                                            if (player.getSession().goldBar > 0) {
                                                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                    int quantity = player.getSession().goldBar;
                                                    Item goldBar = ItemService.gI().createNewItem((short) 457,
                                                            quantity);
                                                    InventoryService.gI().addItemBag(player, goldBar);
                                                    InventoryService.gI().sendItemBags(player);
                                                    this.npcChat(player, "√îng ƒë√£ ƒë·ªÉ " + quantity
                                                            + " th·ªèi v√†ng v√†o h√†nh trang con r·ªìi ƒë·∫•y");
                                                    PlayerDAO.subGoldBar(player, quantity);
                                                    player.getSession().goldBar = 0;
                                                } else {
                                                    this.npcChat(player,
                                                            "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang √¥ng m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                }
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.BUNMA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "C·∫≠u c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó t√¥i nh√©", "C·ª≠a\nh√†ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            if (player.gender == ConstPlayer.TRAI_DAT) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_BUNMA_QK_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "Xin l·ªói c∆∞ng, ch·ªã ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Tr√°i ƒê·∫•t", "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DENDE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    if (player.isHoldNamecBall) {
                                        this.createOtherMenu(player, ConstNpc.ORTHER_MENU,
                                                "√î,ng·ªçc r·ªìng Namek,anh th·∫≠t may m·∫Øn,n·∫øu t√¨m ƒë·ªß 7 vi√™n ng·ªçc c√≥ th·ªÉ tri·ªáu h·ªìi R·ªìng Th·∫ßn Namek,",
                                                "G·ªçi r·ªìng", "T·ª´ ch·ªëi");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Anh c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó em nh√©", "C·ª≠a\nh√†ng");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            if (player.gender == ConstPlayer.NAMEC) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_DENDE_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "Xin l·ªói anh, em ch·ªâ b√°n ƒë·ªì cho d√¢n t·ªôc Nam·∫øc", "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU) {
                                    NamekBallWar.gI().summonDragon(player, this);
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.APPULE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó ta nh√©", "C·ª≠a\nh√†ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            if (player.gender == ConstPlayer.XAYDA) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_APPULE_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "V·ªÅ h√†nh tinh h·∫° ƒë·∫≥ng c·ªßa ng∆∞∆°i m√† mua ƒë·ªì c√πi nh√©. T·∫°i ƒë√¢y ta ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Xayda th√¥i",
                                                        "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DR_DRIEF:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (this.mapId == 84) {
                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                            "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                            pl.gender == ConstPlayer.TRAI_DAT ? "ƒê·∫øn\nTr√°i ƒê·∫•t"
                                                    : pl.gender == ConstPlayer.NAMEC ? "ƒê·∫øn\nNam·∫øc" : "ƒê·∫øn\nXayda");
                                } else if (this.mapId == 153) {
                                    Clan clan = pl.clan;
                                    ClanMember cm = pl.clanMember;
                                    if (cm.role == Clan.LEADER) {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "C·∫ßn 1000 capsule bang [ƒëang c√≥ " + clan.clanPoint
                                                + " capsule bang] ƒë·ªÉ n√¢ng c·∫•p bang h·ªôi l√™n c·∫•p "
                                                + (clan.level++) + "\n"
                                                + "+1 t·ªëi ƒëa s·ªë l∆∞·ª£ng th√†nh vi√™n",
                                                "V·ªÅ\nƒê·∫£oKame", "G√≥p " + cm.memberPoint + " capsule", "N√¢ng c·∫•p",
                                                "T·ª´ ch·ªëi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + cm.memberPoint
                                                + " capsule bang,b·∫°n c√≥ mu·ªën ƒë√≥ng g√≥p to√†n b·ªô cho bang h·ªôi c·ªßa m√¨nh kh√¥ng ?",
                                                "V·ªÅ\nƒê·∫£oKame", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                    }
                                } else if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nNam·∫øc", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 84) {
                                    ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 24, -1, -1);
                                } else if (mapId == 153) {
                                    if (select == 0) {
                                        ChangeMapService.gI().changeMap(player, ConstMap.DAO_KAME, -1, 1059, 408);
                                        return;
                                    }
                                    Clan clan = player.clan;
                                    ClanMember cm = player.clanMember;
                                    if (select == 1) {
                                        player.clan.clanPoint += cm.memberPoint;
                                        cm.clanPoint += cm.memberPoint;
                                        cm.memberPoint = 0;
                                        Service.getInstance().sendThongBao(player, "ƒê√≥ng g√≥p th√†nh c√¥ng");
                                    } else if (select == 2 && cm.role == Clan.LEADER) {
                                        if (clan.level >= 5) {
                                            Service.getInstance().sendThongBao(player,
                                                    "Bang h·ªôi c·ªßa b·∫°n ƒë√£ ƒë·∫°t c·∫•p t·ªëi ƒëa");
                                            return;
                                        }
                                        if (clan.clanPoint < 1000) {
                                            Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß capsule");
                                            return;
                                        }
                                        clan.level++;
                                        clan.maxMember++;
                                        clan.clanPoint -= 1000;
                                        Service.getInstance().sendThongBao(player,
                                                "Bang h·ªôi c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p l√™n c·∫•p " + clan.level);
                                    }
                                } else if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CARGO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CUI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_FIND_BOSS = 20000000;

                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        if (this.mapId == 19) {

                                            int taskId = TaskService.gI().getIdTask(pl);
                                            switch (taskId) {
                                                case ConstTask.TASK_19_0:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_KUKU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nKuku\n(" + Util.numberToMoney(COST_FIND_BOSS)
                                                            + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_19_1:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_MAP_DAU_DINH,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nM·∫≠p ƒë·∫ßu ƒëinh\n("
                                                            + Util.numberToMoney(COST_FIND_BOSS) + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_19_2:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_RAMBO,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nRambo\n(" + Util.numberToMoney(COST_FIND_BOSS)
                                                            + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                default:
                                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");

                                                    break;
                                            }
                                        } else if (this.mapId == 68) {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "Ng∆∞∆°i mu·ªën v·ªÅ Th√†nh Ph·ªë Vegeta", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                        } else {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "T√†u v≈© tr·ª• Xayda s·ª≠ d·ª•ng c√¥ng ngh·ªá m·ªõi nh·∫•t, "
                                                    + "c√≥ th·ªÉ ƒë∆∞a ng∆∞∆°i ƒëi b·∫•t k·ª≥ ƒë√¢u, ch·ªâ c·∫ßn tr·∫£ ti·ªÅn l√† ƒë∆∞·ª£c.",
                                                    "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nNam·∫øc", "Si√™u th·ªã");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 26) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 19) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_KUKU) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.KUKU);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_MAP_DAU_DINH) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.MAP_DAU_DINH);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_RAMBO) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.RAMBO);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 68) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 19, -1, 1100);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.SANTA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o, ta c√≥ m·ªôt s·ªë v·∫≠t ph·∫©m ƒë·∫∑t bi·ªát c·∫≠u c√≥ mu·ªën xem kh√¥ng?", "C·ª≠a h√†ng",
                                        "Ti·ªám\nh·ªõt t√≥c");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5 || this.mapId == 13 || this.mapId == 20) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: // shop
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_0, 0);
                                                break;
                                            case 1: // ti·ªám h·ªõt t√≥c
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_1, 1);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.URON:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                this.openShopWithGender(pl, ConstNpc.SHOP_URON_0, 0);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.BA_HAT_MIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                switch (this.mapId) {
                                    case 5:
                                    case 84:
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                "√âp sao\ntrang b·ªã", "Pha l√™\nh√≥a\ntrang b·ªã", "ƒê·ªïi V√©\nH·ªßy Di·ªát",
                                                "ƒê·ªì \n K√≠ch Ho·∫°t", "Gia h·∫°n\nC·∫£i trang");
                                        break;
                                    case 121:
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                "V·ªÅ ƒë·∫£o\nr√πa");
                                        break;
                                    default:
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                "C·ª≠a h√†ng\nB√πa", "N√¢ng c·∫•p\nV·∫≠t ph·∫©m", "N√¢ng c·∫•p\nB√¥ng tai\nPorata",
                                                "N√¢ng c·∫•p\nCh·ªâ s·ªë\nB√¥ng tai", "Nh·∫≠p\nNg·ªçc R·ªìng");
                                        break;
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5 || this.mapId == 84) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.EP_SAO_TRANG_BI);
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.MENU_PHA_LE_HOA_TRANG_BI,
                                                        "Ng∆∞∆°i mu·ªën pha l√™ h√≥a trang b·ªã b·∫±ng c√°ch n√†o?", "M·ªôt L·∫ßn",
                                                        "5 L·∫ßn", "T·ª´ ch·ªëi");
                                                break;
                                            case 2:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.DOI_VE_HUY_DIET);
                                                break;
                                            case 3:
                                                this.createOtherMenu(player, ConstNpc.ORTHER_MENU,
                                                        "Ng∆∞∆°i mu·ªën ch·ªçn lo·∫°i ƒë·ªì k√≠ch ho·∫°t n√†o ?", "ƒê·ªïi ƒê·ªì\nK√≠ch Ho·∫°t",
                                                        "ƒê·ªïi ƒê·ªì\nK√≠ch Ho·∫°t\nVIP", "T·ª´ ch·ªëi");
                                                break;
                                            case 4:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.GIA_HAN_CAI_TRANG);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHA_LE_HOA_TRANG_BI) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.PHA_LE_HOA_TRANG_BI);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.PHA_LE_HOA_TRANG_BI_X10);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHUYEN_HOA_TRANG_BI) {
                                        switch (select) {
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.EP_SAO_TRANG_BI:
                                            case CombineServiceNew.PHA_LE_HOA_TRANG_BI:
                                            case CombineServiceNew.PHA_LE_HOA_TRANG_BI_X10:
                                            case CombineServiceNew.DOI_VE_HUY_DIET:
                                            case CombineServiceNew.DAP_SET_KICH_HOAT:
                                            case CombineServiceNew.DAP_SET_KICH_HOAT_CAO_CAP:
                                            case CombineServiceNew.GIA_HAN_CAI_TRANG:
                                                if (select == 0) {
                                                    CombineServiceNew.gI().startCombine(player);
                                                }
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.DAP_SET_KICH_HOAT);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.DAP_SET_KICH_HOAT_CAO_CAP);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 112) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 5, -1, 1156);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 42 || this.mapId == 43 || this.mapId == 44) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: // shop b√πa
                                                createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                        "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                        + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                        "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                        "B√πa\n  ƒê·ªá t·ª≠ Mab∆∞\n 1 gi·ªù", "ƒê√≥ng");
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                break;
                                            case 2: // n√¢ng c·∫•p b√¥ng tai
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.NANG_CAP_BONG_TAI);
                                                break;
                                            case 3: // l√†m ph√©p nh·∫≠p ƒë√°
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.MO_CHI_SO_BONG_TAI);
                                                break;
                                            case 4:
                                                // CombineService.gI().openTabCombine(player,
                                                // CombineService.NHAP_NGOC_RONG);
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.NHAP_NGOC_RONG);
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_SHOP_BUA) {
                                        switch (select) {
                                            case 0:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_0, 0);
                                                break;
                                            case 1:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_1, 1);
                                                break;
                                            case 2:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_2, 2);
                                                break;
                                            case 3:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_3, 3);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.NANG_CAP_VAT_PHAM:
                                                if (select == 0) {
                                                    player.iDMark.isUseTuiBaoVeNangCap = false;
                                                    CombineServiceNew.gI().startCombine(player);
                                                } else if (select == 1) {
                                                    player.iDMark.isUseTuiBaoVeNangCap = true;
                                                    CombineServiceNew.gI().startCombine(player);
                                                }
                                                break;
                                            case CombineServiceNew.NANG_CAP_BONG_TAI:
                                            case CombineServiceNew.MO_CHI_SO_BONG_TAI:
                                            case CombineServiceNew.LAM_PHEP_NHAP_DA:
                                            case CombineServiceNew.NHAP_NGOC_RONG:
                                                if (select == 0) {
                                                    CombineServiceNew.gI().startCombine(player);
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RUONG_DO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                InventoryService.gI().sendItemBox(player);
                                InventoryService.gI().openBox(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.DAU_THAN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.magicTree.openMenuTree();
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                TaskService.gI().checkDoneTaskConfirmMenuNpc(player, this, (byte) select);
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_LEFT_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            if (player.magicTree.level == 10) {
                                                player.magicTree.fastRespawnPea();
                                            } else {
                                                player.magicTree.showConfirmUpgradeMagicTree();
                                            }
                                        } else if (select == 2) {
                                            player.magicTree.fastRespawnPea();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_FULL_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUpgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.upgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.fastUpgradeMagicTree();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUnuppgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UNUPGRADE:
                                        if (select == 0) {
                                            player.magicTree.unupgradeMagicTree();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CALICK:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        private final byte COUNT_CHANGE = 50;
                        private int count;

                        private void changeMap() {
                            if (this.mapId != 102) {
                                count++;
                                if (this.count >= COUNT_CHANGE) {
                                    count = 0;
                                    this.map.npcs.remove(this);
                                    Map map = MapService.gI().getMapForCalich();
                                    this.mapId = map.mapId;
                                    this.cx = Util.nextInt(100, map.mapWidth - 100);
                                    this.cy = map.yPhysicInTop(this.cx, 0);
                                    this.map = map;
                                    this.map.npcs.add(this);
                                }
                            }
                        }

                        @Override
                        public void openBaseMenu(Player player) {
                            player.iDMark.setIndexMenu(ConstNpc.BASE_MENU);
                            if (TaskService.gI().getIdTask(player) < ConstTask.TASK_20_0) {
                                Service.getInstance().hideWaitDialog(player);
                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                return;
                            }
                            if (this.mapId != player.zone.map.mapId) {
                                Service.getInstance().sendThongBao(player, "Cal√≠ch ƒë√£ r·ªùi kh·ªèi map!");
                                Service.getInstance().hideWaitDialog(player);
                                return;
                            }

                            if (this.mapId == 102) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?",
                                        "K·ªÉ\nChuy·ªán", "Quay v·ªÅ\nQu√° kh·ª©");
                            } else {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?",
                                        "K·ªÉ\nChuy·ªán", "ƒêi ƒë·∫øn\nT∆∞∆°ng lai", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (this.mapId == 102) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        // k·ªÉ chuy·ªán
                                        NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                    } else if (select == 1) {
                                        // v·ªÅ qu√° kh·ª©
                                        ChangeMapService.gI().goToQuaKhu(player);
                                    }
                                }
                            } else if (player.iDMark.isBaseMenu()) {
                                if (select == 0) {
                                    // k·ªÉ chuy·ªán
                                    NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                } else if (select == 1) {
                                    // ƒë·∫øn t∆∞∆°ng lai
                                    // changeMap();
                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_20_0) {
                                        ChangeMapService.gI().goToTuongLai(player);
                                    }
                                } else {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.JACO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 24 || this.mapId == 25 || this.mapId == 26) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "G√¥ T√™n, Calich v√† Monaka ƒëang g·∫∑p chuy·ªán ·ªü h√†nh tinh Potaufeu \n H√£y ƒë·∫øn ƒë√≥ ngay", "ƒê·∫øn \nPotaufeu", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 139) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞·ªùi mu·ªën tr·ªü v·ªÅ?", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (canOpenNpc(player)) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (this.mapId == 24) {
                                            switch (select) {
                                                case 0:
                                                    if (player.getSession().player.nPoint.power >= 800000000L) {
                                                        ChangeMapService.gI().goToPotaufeu(player);
                                                    } else {
                                                        this.npcChat(player, "B·∫°n ch∆∞a ƒë·ªß 800tr s·ª©c m·∫°nh ƒë·ªÉ v√†o!");
                                                    }
                                            }
                                        }
                                    } else if (this.mapId == 139) {
                                        if (player.iDMark.isBaseMenu()) {
                                            switch (select) {
                                                case 0 ->
                                                    //v·ªÅ tr·∫°m v≈© tr·ª•
                                                    ChangeMapService.gI().changeMapBySpaceShip(player, 24 + player.gender, -1, -1);
                                            }
                                        }
                                    }
                                }
                            }
                        }

                    };
                    break;

                case ConstNpc.THAN_MEO_KARIN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (mapId == ConstMap.THAP_KARIN) {
                                    if (player.zone instanceof ZSnakeRoad) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "H√£y c·∫ßm l·∫•y hai h·∫°t ƒë·∫≠u cu·ªëi c√πng ·ªü ƒë√¢y\nC·ªë gi·ªØ m√¨nh nh√© "
                                                + player.name,
                                                "C·∫£m ∆°n\ns∆∞ ph·ª•");
                                    } else if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Ch√†o con, con mu·ªën ta gi√∫p g√¨ n√†o?", getMenuSuKien(EVENT_SEVER));
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (mapId == ConstMap.THAP_KARIN) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (player.zone instanceof ZSnakeRoad) {
                                            switch (select) {
                                                case 0:
                                                    player.setInteractWithKarin(true);
                                                    Service.getInstance().sendThongBao(player,
                                                            "H√£y mau bay xu·ªëng ch√¢n th√°p Karin");
                                                    break;
                                            }
                                        } else {
                                            switch (select) {
                                                case 0:
                                                    switch (EVENT_SEVER) {
                                                        case 2:
                                                            Attribute at = ServerManager.gI().getAttributeManager()
                                                                    .find(ConstAttribute.TNSM);
                                                            String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                    + Manager.SERVER_NAME + "\n "
                                                                    + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                    + player.event.getEventPoint()
                                                                    + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                    + EVENT_COUNT_THAN_MEO % 999 + "/999";
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                    at != null && !at.isExpired() ? text
                                                                    + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% TNSM cho ƒë·ªá t·ª≠ khi ƒë√°nh qu√°i,th·ªùi gian c√≤n l·∫°i "
                                                                    + at.getTime() / 60 + " ph√∫t."
                                                                    : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng tƒÉng 20% TNSM cho ƒë·ªá t·ª≠ trong 60 ph√∫t\n",
                                                                    "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng",
                                                                    "T·∫∑ng\n99 B√¥ng", "ƒê·ªïi\nH·ªôp qu√†");
                                                            break;
                                                    }
                                            }
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                        openMenuSuKien(player, this, tempId, select);
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.THUONG_DE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Con mu·ªën l√†m g√¨ n√†o", "ƒê·∫øn Kaio",
                                            "Quay s·ªë\nmay m·∫Øn", getMenuSuKien(EVENT_SEVER));
                                } else if (player.zone instanceof ZSnakeRoad) {
                                    if (mapId == ConstMap.CON_DUONG_RAN_DOC) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "H√£y l·∫Øm l·∫•y tay ta mau",
                                                "V·ªÅ th·∫ßn ƒëi·ªán");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 48, -1, 354);
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.MENU_CHOOSE_LUCKY_ROUND,
                                                        "Con mu·ªën l√†m g√¨ n√†o?", "Quay b·∫±ng\nv√†ng",
                                                        "R∆∞∆°ng ph·ª•\n("
                                                        + (player.inventory.itemsBoxCrackBall.size()
                                                        - InventoryService.gI().getCountEmptyListItem(
                                                                player.inventory.itemsBoxCrackBall))
                                                        + " m√≥n)",
                                                        "X√≥a h·∫øt\ntrong r∆∞∆°ng", "ƒê√≥ng");
                                                break;
                                            case 2:
                                                switch (EVENT_SEVER) {
                                                    case 2:
                                                        Attribute at = ServerManager.gI().getAttributeManager()
                                                                .find(ConstAttribute.KI);
                                                        String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                + Manager.SERVER_NAME + "\n + "
                                                                + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                + player.event.getEventPoint()
                                                                + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                + EVENT_COUNT_THUONG_DE % 999 + "/999";
                                                        this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                at != null && !at.isExpired() ? text
                                                                + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% KI,th·ªùi gian c√≤n l·∫°i "
                                                                + at.getTime() / 60 + " ph√∫t."
                                                                : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% Ki trong 60 ph√∫t\n",
                                                                "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                                "ƒê·ªïi\nH·ªôp qu√†");
                                                        break;
                                                }
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHOOSE_LUCKY_ROUND) {
                                        switch (select) {
                                            case 0:
                                                LuckyRoundService.gI().openCrackBallUI(player,
                                                        LuckyRoundService.USING_GOLD);
                                                break;
                                            case 1:
                                                ShopService.gI().openBoxItemLuckyRound(player);
                                                break;
                                            case 2:
                                                NpcService.gI().createMenuConMeo(player,
                                                        ConstNpc.CONFIRM_REMOVE_ALL_ITEM_LUCKY_ROUND, this.avartar,
                                                        "Con c√≥ ch·∫Øc mu·ªën x√≥a h·∫øt v·∫≠t ph·∫©m trong r∆∞∆°ng ph·ª•? Sau khi x√≥a "
                                                        + "s·∫Ω kh√¥ng th·ªÉ kh√¥i ph·ª•c!",
                                                        "ƒê·ªìng √Ω", "H·ªßy b·ªè");
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                        openMenuSuKien(player, this, tempId, select);
                                    }
                                } else if (player.zone instanceof ZSnakeRoad) {
                                    if (mapId == ConstMap.CON_DUONG_RAN_DOC) {
                                        ZSnakeRoad zroad = (ZSnakeRoad) player.zone;
                                        if (zroad.isKilledAll()) {
                                            SnakeRoad road = (SnakeRoad) zroad.getDungeon();
                                            ZSnakeRoad egr = (ZSnakeRoad) road.find(ConstMap.THAN_DIEN);
                                            egr.enter(player, 360, 408);
                                            Service.getInstance().sendThongBao(player, "H√£y xu·ªëng g·∫∑p th·∫ßn m√®o Karin");
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "H√£y ti√™u di·ªát h·∫øt qu√°i v·∫≠t ·ªü ƒë√¢y!");
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.THAN_VU_TRU:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Con mu·ªën l√†m g√¨ n√†o", "Di chuy·ªÉn",
                                            getMenuSuKien(EVENT_SEVER));
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                this.createOtherMenu(player, ConstNpc.MENU_DI_CHUYEN,
                                                        "Con mu·ªën ƒëi ƒë√¢u?", "V·ªÅ\nth·∫ßn ƒëi·ªán", "Th√°nh ƒë·ªãa\nKaio",
                                                        "Con\nƒë∆∞·ªùng\nr·∫Øn ƒë·ªôc", getMenuSuKien(EVENT_SEVER), "T·ª´ ch·ªëi");
                                                break;
                                            case 1:
                                                switch (EVENT_SEVER) {
                                                    case 2:
                                                        Attribute at = ServerManager.gI().getAttributeManager()
                                                                .find(ConstAttribute.HP);
                                                        String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                + Manager.SERVER_NAME + "\n "
                                                                + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                + player.event.getEventPoint()
                                                                + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                + EVENT_COUNT_THAN_VU_TRU % 999 + "/999";
                                                        this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                at != null && !at.isExpired() ? text
                                                                + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% HP,th·ªùi gian c√≤n l·∫°i "
                                                                + at.getTime() / 60 + " ph√∫t."
                                                                : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% HP trong 60 ph√∫t\n",
                                                                "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                                "ƒê·ªïi\nH·ªôp qu√†");
                                                        break;
                                                }
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_DI_CHUYEN) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 45, -1, 354);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                break;
                                            case 2:
                                                // con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc
                                                // Service.getInstance().sendThongBao(player, "Comming Soon.");
                                                if (player.clan != null) {
                                                    Calendar calendar = Calendar.getInstance();
                                                    int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
                                                    if (!(dayOfWeek == Calendar.MONDAY
                                                            || dayOfWeek == Calendar.WEDNESDAY
                                                            || dayOfWeek == Calendar.FRIDAY
                                                            || dayOfWeek == Calendar.SUNDAY)) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Ch·ªâ m·ªü v√†o th·ª© 2, 4, 6, CN h√†ng tu·∫ßn!");
                                                        return;
                                                    }
                                                    if (player.clanMember.getNumDateFromJoinTimeToToday() < 2) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Ph·∫£i tham gia bang h·ªôi √≠t nh·∫•t 2 ng√†y m·ªõi c√≥ th·ªÉ tham gia!");
                                                        return;
                                                    }
                                                    if (player.clan.snakeRoad == null) {
                                                        this.createOtherMenu(player, ConstNpc.MENU_CHON_CAP_DO,
                                                                "H√£y mau tr·ªü v·ªÅ b·∫±ng con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc\nb·ªçn Xayda ƒë√£ ƒë·∫øn Tr√°i ƒê·∫•t",
                                                                "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                    } else {
                                                        if (player.clan.snakeRoad.isClosed()) {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "Bang h·ªôi ƒë√£ h·∫øt l∆∞·ª£t tham gia!");
                                                        } else {
                                                            this.createOtherMenu(player,
                                                                    ConstNpc.MENU_ACCEPT_GO_TO_CDRD,
                                                                    "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒë·∫øn con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc c·∫•p ƒë·ªô "
                                                                    + player.clan.snakeRoad.getLevel() + "?",
                                                                    "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                        }
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Ch·ªâ d√†nh cho nh·ªØng ng∆∞·ªùi trong bang h·ªôi!");
                                                }
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHON_CAP_DO) {
                                        switch (select) {
                                            case 0:
                                                Input.gI().createFormChooseLevelCDRD(player);
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_ACCEPT_GO_TO_CDRD) {
                                        switch (select) {
                                            case 0:
                                                if (player.clan != null) {
                                                    synchronized (player.clan) {
                                                        if (player.clan.snakeRoad == null) {
                                                            int level = Byte.parseByte(
                                                                    String.valueOf(PLAYERID_OBJECT.get(player.id)));
                                                            SnakeRoad road = new SnakeRoad(level);
                                                            ServerManager.gI().getDungeonManager().addDungeon(road);
                                                            road.join(player);
                                                            player.clan.snakeRoad = road;
                                                        } else {
                                                            player.clan.snakeRoad.join(player);
                                                        }
                                                    }
                                                }
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                        openMenuSuKien(player, this, tempId, select);
                                    }
                                }
                            }
                        }

                    };
                    break;
                case ConstNpc.KIBIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.OSIN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "ƒê·∫øn\nh√†nh tinh\nBill", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 52) {
                                    if (MabuWar.gI().isTimeMabuWar()) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "B√¢y gi·ªù t√¥i s·∫Ω b√≠ m·∫≠t...\n ƒëu·ªïi theo 2 t√™n ƒë·ªì t·ªÉ... \n"
                                                + "Qu√Ω v·ªã n√†o mu·ªën ƒëi theo th√¨ xin m·ªùi !",
                                                "Ok", "Ch√™");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "V√†o l√∫c 12h t√¥i s·∫Ω b√≠ m·∫≠t...\n ƒëu·ªïi theo 2 t√™n ƒë·ªì t·ªÉ... \n"
                                                + "Qu√Ω v·ªã n√†o mu·ªën ƒëi theo th√¨ xin m·ªùi !",
                                                "Ok");
                                    }
                                } else if (this.mapId == 154) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "V·ªÅ th√°nh ƒë·ªãa", "ƒê·∫øn\nh√†nh tinh\nng·ª•c t√π", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 155) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·ª´ng v·ªôi xem th∆∞·ªùng Babyƒë√¢y,ngay ƒë·∫øn cha h·∫Øn l√† th·∫ßn ma ƒë·∫°o sƒ©\n"
                                            + "Bibiƒë√¢y khi c√≤n s·ªëng c≈©ng ph·∫£i s·ª£ h·∫Øn ƒë·∫•y",
                                            "Gi·∫£i tr·ª´\nph√©p thu·∫≠t\n50Tr V√†ng",
                                            player.zone.map.mapId != 120 ? "Xu·ªëng\nT·∫ßng D∆∞·ªõi" : "R·ªùi\nKh·ªèi ƒë√¢y");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 52) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 114, -1, 354, 240);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 154) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                break;
                                            case 1:
                                                if (!Manager.gI().getGameConfig().isOpenPrisonPlanet()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "L·ªëi v√†o h√†nh tinh ng·ª•c t√π ch∆∞a m·ªü");
                                                    return;
                                                }
                                                if (player.nPoint.power < 60000000000L) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Y√™u c·∫ßu t·ªëi thi·∫øu 60t·ª∑ s·ª©c m·∫°nh");
                                                    return;
                                                }
                                                ChangeMapService.gI().changeMap(player, 155, -1, 111, 792);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 155) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                        }
                                    }
                                } else if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.inventory.getGold() >= 50000000) {
                                                    Service.getInstance().changeFlag(player, 9);
                                                    player.inventory.subGold(50000000);

                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng");
                                                }
                                                break;
                                            case 1:
                                                if (player.zone.map.mapId == 120) {
                                                    ChangeMapService.gI().changeMapBySpaceShip(player,
                                                            player.gender + 21, -1, 250);
                                                }
                                                if (player.cFlag == 9) {
                                                    if (player.getPowerPoint() >= 20) {
                                                        if (!(player.zone.map.mapId == 119)) {
                                                            int idMapNextFloor = player.zone.map.mapId == 115
                                                                    ? player.zone.map.mapId + 2
                                                                    : player.zone.map.mapId + 1;
                                                            ChangeMapService.gI().changeMap(player, idMapNextFloor, -1,
                                                                    354, 240);
                                                        } else {
                                                            Zone zone = MabuWar.gI().getMapLastFloor(120);
                                                            if (zone != null) {
                                                                ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                                            }
                                                        }
                                                        player.resetPowerPoint();
                                                        player.sendMenuGotoNextFloorMabuWar = false;
                                                        Service.getInstance().sendPowerInfo(player, "%",
                                                                player.getPowerPoint());
                                                        if (Util.isTrue(1, 30)) {
                                                            player.inventory.ruby += 1;
                                                            PlayerService.gI().sendInfoHpMpMoney(player);
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                                                        }
                                                    } else {
                                                        this.npcChat(player,
                                                                "Ng∆∞∆°i c·∫ßn c√≥ ƒë·ªß ƒëi·ªÉm ƒë·ªÉ xu·ªëng t·∫ßng ti·∫øp theo");
                                                    }
                                                    break;
                                                } else {
                                                    this.npcChat(player,
                                                            "Ng∆∞∆°i ƒëang theo phe Babiƒë√¢y,H√£y qua b√™n ƒë√≥ m√† th·ªÉ hi·ªán");
                                                }
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BABIDAY:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·ª´ng v·ªôi xem th∆∞·ªùng Babyƒë√¢y,ngay ƒë·∫øn cha h·∫Øn l√† th·∫ßn ma ƒë·∫°o sƒ©\n"
                                            + "Bibiƒë√¢y khi c√≤n s·ªëng c≈©ng ph·∫£i s·ª£ h·∫Øn ƒë·∫•y",
                                            "Y·ªÉm b√πa\n50Tr V√†ng",
                                            player.zone.map.mapId != 120 ? "Xu·ªëng\nT·∫ßng D∆∞·ªõi" : "R·ªùi\nKh·ªèi ƒë√¢y");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.inventory.getGold() >= 50000000) {
                                                    Service.getInstance().changeFlag(player, 10);
                                                    player.inventory.subGold(50000000);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng");
                                                }
                                                break;
                                            case 1:
                                                if (player.zone.map.mapId == 120) {
                                                    ChangeMapService.gI().changeMapBySpaceShip(player,
                                                            player.gender + 21, -1, 250);
                                                }
                                                if (player.cFlag == 10) {
                                                    if (player.getPowerPoint() >= 20) {
                                                        if (!(player.zone.map.mapId == 119)) {
                                                            int idMapNextFloor = player.zone.map.mapId == 115
                                                                    ? player.zone.map.mapId + 2
                                                                    : player.zone.map.mapId + 1;
                                                            ChangeMapService.gI().changeMap(player, idMapNextFloor, -1,
                                                                    354, 240);
                                                        } else {
                                                            Zone zone = MabuWar.gI().getMapLastFloor(120);
                                                            if (zone != null) {
                                                                ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                                                ChangeMapService.gI().changeMapBySpaceShip(player,
                                                                        player.gender + 21, -1, 250);
                                                            }
                                                        }
                                                        player.resetPowerPoint();
                                                        player.sendMenuGotoNextFloorMabuWar = false;
                                                        Service.getInstance().sendPowerInfo(player, "TL",
                                                                player.getPowerPoint());
                                                        if (Util.isTrue(1, 30)) {
                                                            player.inventory.ruby += 1;
                                                            PlayerService.gI().sendInfoHpMpMoney(player);
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                                                        }
                                                    } else {
                                                        this.npcChat(player,
                                                                "Ng∆∞∆°i c·∫ßn c√≥ ƒë·ªß ƒëi·ªÉm ƒë·ªÉ xu·ªëng t·∫ßng ti·∫øp theo");
                                                    }
                                                    break;
                                                } else {
                                                    this.npcChat(player,
                                                            "Ng∆∞∆°i ƒëang theo phe √îsin,H√£y qua b√™n ƒë√≥ m√† th·ªÉ hi·ªán");
                                                }
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.LINH_CANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.clan == null) {
                                    this.createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                            "Ch·ªâ ti·∫øp c√°c bang h·ªôi, mi·ªÖn ti·∫øp kh√°ch v√£ng lai", "ƒê√≥ng");
                                } else if (player.clan.getMembers().size() < 3) {
                                    // } else if (player.clan.getMembers().size() < 1) {
                                    this.createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                            "Bang h·ªôi ph·∫£i c√≥ √≠t nh·∫•t 3 th√†nh vi√™n m·ªõi c√≥ th·ªÉ m·ªü", "ƒê√≥ng");
                                } else {
                                    ClanMember clanMember = player.clan.getClanMember((int) player.id);
                                    int days = (int) (((System.currentTimeMillis() / 1000) - clanMember.joinTime) / 60
                                            / 60 / 24);
                                    if (days < 0) {
                                        NpcService.gI().createTutorial(player, avartar,
                                                "Ch·ªâ nh·ªØng th√†nh vi√™n gia nh·∫≠p bang h·ªôi t·ªëi thi·ªÉu 1 ng√†y m·ªõi c√≥ th·ªÉ tham gia");
                                        return;
                                    }
                                    if (!player.clan.haveGoneDoanhTrai && player.clan.timeOpenDoanhTrai != 0) {
                                        createOtherMenu(player, ConstNpc.MENU_VAO_DT,
                                                "Bang h·ªôi c·ªßa ng∆∞∆°i ƒëang ƒë√°nh tr·∫°i ƒë·ªôc nh√£n\n" + "Th·ªùi gian c√≤n l·∫°i l√† "
                                                + TimeUtil.getSecondLeft(player.clan.timeOpenDoanhTrai,
                                                        DoanhTrai.TIME_DOANH_TRAI / 1000)
                                                + ". Ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                "Tham gia", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                    } else {
                                        List<Player> plSameClans = new ArrayList<>();
                                        List<Player> playersMap = player.zone.getPlayers();
                                        synchronized (playersMap) {
                                            for (Player pl : playersMap) {
                                                if (!pl.equals(player) && pl.clan != null
                                                        && pl.clan.id == player.clan.id && pl.location.x >= 1285
                                                        && pl.location.x <= 1645) {
                                                    plSameClans.add(pl);
                                                }

                                            }
                                        }
                                        if (plSameClans.size() >= 2) {
                                            if (!player.isAdmin() && player.clanMember.getNumDateFromJoinTimeToToday() < DoanhTrai.DATE_WAIT_FROM_JOIN_CLAN) {
                                                createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                        "Bang h·ªôi ch·ªâ cho ph√©p nh·ªØng ng∆∞·ªùi ·ªü trong bang tr√™n 1 ng√†y. H·∫πn ng∆∞∆°i quay l·∫°i v√†o l√∫c kh√°c",
                                                        "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                            } else if (player.clan.haveGoneDoanhTrai) {
                                                createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                        "Bang h·ªôi c·ªßa ng∆∞∆°i ƒë√£ ƒëi tr·∫°i l√∫c "
                                                        + Util.formatTime(player.clan.timeOpenDoanhTrai)
                                                        + " h√¥m nay. Ng∆∞·ªùi m·ªü\n" + "("
                                                        + player.clan.playerOpenDoanhTrai.name
                                                        + "). H·∫πn ng∆∞∆°i quay l·∫°i v√†o ng√†y mai",
                                                        "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");

                                            } else {
                                                createOtherMenu(player, ConstNpc.MENU_CHO_VAO_DT,
                                                        "H√¥m nay bang h·ªôi c·ªßa ng∆∞∆°i ch∆∞a v√†o tr·∫°i l·∫ßn n√†o. Ng∆∞∆°i c√≥ mu·ªën v√†o\n"
                                                        + "kh√¥ng?\nƒê·ªÉ v√†o, ta khuy√™n ng∆∞∆°i n√™n c√≥ 3-4 ng∆∞·ªùi c√πng bang ƒëi c√πng",
                                                        "V√†o\n(mi·ªÖn ph√≠)", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                            }
                                        } else {
                                            createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                    "Ng∆∞∆°i ph·∫£i c√≥ √≠t nh·∫•t 2 ƒë·ªìng ƒë·ªôi c√πng bang ƒë·ª©ng g·∫ßn m·ªõi c√≥ th·ªÉ\nv√†o\n"
                                                    + "tuy nhi√™n ta khuy√™n ng∆∞∆°i n√™n ƒëi c√πng v·ªõi 3-4 ng∆∞·ªùi ƒë·ªÉ kh·ªèi ch·∫øt.\n"
                                                    + "Hahaha.",
                                                    "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 27) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.MENU_KHONG_CHO_VAO_DT:
                                            if (select == 1) {
                                                NpcService.gI().createTutorial(player, this.avartar,
                                                        ConstNpc.HUONG_DAN_DOANH_TRAI);
                                            }
                                            break;
                                        case ConstNpc.MENU_CHO_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    DoanhTraiService.gI().openDoanhTrai(player);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar,
                                                            ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.MENU_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    ChangeMapService.gI().changeMap(player, 53, 0, 35, 432);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar,
                                                            ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUA_TRUNG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_AP_TRUNG_NHANH = 1000000000;

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.mabuEgg.sendMabuEgg();
                                if (player.mabuEgg.getSecondDone() != 0) {
                                    this.createOtherMenu(player, ConstNpc.CAN_NOT_OPEN_EGG, "B∆∞ b∆∞ b∆∞...",
                                            "H·ªßy b·ªè\ntr·ª©ng",
                                            "·∫§p nhanh\n" + Util.numberToMoney(COST_AP_TRUNG_NHANH) + " v√†ng", "ƒê√≥ng");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.CAN_OPEN_EGG, "B∆∞ b∆∞ b∆∞...", "N·ªü",
                                            "H·ªßy b·ªè\ntr·ª©ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.CAN_NOT_OPEN_EGG:
                                        if (select == 0) {
                                            this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                    "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                        } else if (select == 1) {
                                            if (player.inventory.gold >= COST_AP_TRUNG_NHANH) {
                                                player.inventory.gold -= COST_AP_TRUNG_NHANH;
                                                player.mabuEgg.timeDone = 0;
                                                Service.getInstance().sendMoney(player);
                                                player.mabuEgg.sendMabuEgg();
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ th·ª±c hi·ªán, c√≤n thi·∫øu "
                                                        + Util.numberToMoney(
                                                                (COST_AP_TRUNG_NHANH - player.inventory.gold))
                                                        + " v√†ng");
                                            }
                                        }
                                        break;
                                    case ConstNpc.CAN_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_OPEN_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn cho tr·ª©ng n·ªü?\n"
                                                        + "ƒê·ªá t·ª≠ c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c thay th·∫ø b·∫±ng ƒë·ªá Mab∆∞",
                                                        "ƒê·ªá mab∆∞\nTr√°i ƒê·∫•t", "ƒê·ªá mab∆∞\nNam·∫øc", "ƒê·ªá mab∆∞\nXayda",
                                                        "T·ª´ ch·ªëi");
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω",
                                                        "T·ª´ ch·ªëi");
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                player.mabuEgg.openEgg(ConstPlayer.TRAI_DAT);
                                                break;
                                            case 1:
                                                player.mabuEgg.openEgg(ConstPlayer.NAMEC);
                                                break;
                                            case 2:
                                                player.mabuEgg.openEgg(ConstPlayer.XAYDA);
                                                break;
                                            default:
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_DESTROY_EGG:
                                        if (select == 0) {
                                            player.mabuEgg.destroyEgg();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUOC_VUONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "Con mu·ªën n√¢ng gi·ªõi h·∫°n s·ª©c m·∫°nh cho b·∫£n th√¢n hay ƒë·ªá t·ª≠?", "B·∫£n th√¢n", "ƒê·ªá t·ª≠",
                                    "T·ª´ ch·ªëi");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            if (player.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                this.createOtherMenu(player, ConstNpc.OPEN_POWER_MYSEFT,
                                                        "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa b·∫£n th√¢n l√™n "
                                                        + Util.numberToMoney(player.nPoint.getPowerNextLimit()),
                                                        "N√¢ng\ngi·ªõi h·∫°n\ns·ª©c m·∫°nh",
                                                        "N√¢ng ngay\n"
                                                        + Util.numberToMoney(
                                                                OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER)
                                                        + " v√†ng",
                                                        "ƒê√≥ng");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "S·ª©c m·∫°nh c·ªßa con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n", "ƒê√≥ng");
                                            }
                                            break;
                                        case 1:
                                            if (player.pet != null) {
                                                if (player.pet.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                    this.createOtherMenu(player, ConstNpc.OPEN_POWER_PET,
                                                            "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa ƒë·ªá t·ª≠ l√™n "
                                                            + Util.numberToMoney(
                                                                    player.pet.nPoint.getPowerNextLimit()),
                                                            "N√¢ng ngay\n" + Util.numberToMoney(
                                                                    OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER)
                                                            + " v√†ng",
                                                            "ƒê√≥ng");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                            "S·ª©c m·∫°nh c·ªßa ƒë·ªá con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n", "ƒê√≥ng");
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                            }
                                            // gi·ªõi h·∫°n ƒë·ªá t·ª≠
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_MYSEFT) {
                                    switch (select) {
                                        case 0:
                                            OpenPowerService.gI().openPowerBasic(player);
                                            break;
                                        case 1:
                                            if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                                if (OpenPowerService.gI().openPowerSpeed(player)) {
                                                    player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                    Service.getInstance().sendMoney(player);
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu " + Util.numberToMoney(
                                                                (OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER
                                                                - player.inventory.gold))
                                                        + " v√†ng");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_PET) {
                                    if (select == 0) {
                                        if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                            if (OpenPowerService.gI().openPowerSpeed(player.pet)) {
                                                player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                Service.getInstance().sendMoney(player);
                                            }
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu " + Util
                                                            .numberToMoney((OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER
                                                                    - player.inventory.gold))
                                                    + " v√†ng");
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BUNMA_TL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "C·∫≠u b√© mu·ªën mua g√¨ n√†o?",
                                            "C·ª≠a h√†ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0,
                                                player.gender);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_OMEGA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                BlackBallWar.gI().setTime();
                                if (this.mapId == 24 || this.mapId == 25 || this.mapId == 26) {
                                    try {
                                        long now = System.currentTimeMillis();
                                        if (now > BlackBallWar.TIME_OPEN && now < BlackBallWar.TIME_CLOSE) {
                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_BDW,
                                                    "ƒê∆∞·ªùng ƒë·∫øn v·ªõi ng·ªçc r·ªìng sao ƒëen ƒë√£ m·ªü, "
                                                    + "ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                    "H∆∞·ªõng d·∫´n\nth√™m", "Tham gia", "T·ª´ ch·ªëi");
                                        } else {
                                            String[] optionRewards = new String[7];
                                            int index = 0;
                                            for (int i = 0; i < 7; i++) {
                                                if (player.rewardBlackBall.timeOutOfDateReward[i] > System
                                                        .currentTimeMillis()) {
                                                    optionRewards[index] = "Nh·∫≠n th∆∞·ªüng\n" + (i + 1) + " sao";
                                                    index++;
                                                }
                                            }
                                            if (index != 0) {
                                                String[] options = new String[index + 1];
                                                for (int i = 0; i < index; i++) {
                                                    options[i] = optionRewards[i];
                                                }
                                                options[options.length - 1] = "T·ª´ ch·ªëi";
                                                this.createOtherMenu(player, ConstNpc.MENU_REWARD_BDW,
                                                        "Ng∆∞∆°i c√≥ m·ªôt v√†i ph·∫ßn th∆∞·ªüng ng·ªçc " + "r·ªìng sao ƒëen ƒë√¢y!",
                                                        options);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_NOT_OPEN_BDW,
                                                        "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "H∆∞·ªõng d·∫´n", "T·ª´ ch·ªëi");
                                            }
                                        }
                                    } catch (Exception ex) {
                                        Log.error("L·ªói m·ªü menu r·ªìng Omega");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MENU_REWARD_BDW:
                                        player.rewardBlackBall.getRewardSelect((byte) select);
                                        break;
                                    case ConstNpc.MENU_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar,
                                                    ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        } else if (select == 1) {
                                            player.iDMark.setTypeChangeMap(ConstMap.CHANGE_BLACK_BALL);
                                            ChangeMapService.gI().openChangeMapTab(player);
                                        }
                                        break;
                                    case ConstNpc.MENU_NOT_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar,
                                                    ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_1S:
                case ConstNpc.RONG_2S:
                case ConstNpc.RONG_3S:
                case ConstNpc.RONG_4S:
                case ConstNpc.RONG_5S:
                case ConstNpc.RONG_6S:
                case ConstNpc.RONG_7S:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.isHoldBlackBall) {
                                    this.createOtherMenu(player, ConstNpc.MENU_PHU_HP, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?",
                                            "Ph√π h·ªô", "T·ª´ ch·ªëi");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_GO_HOME,
                                            "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "V·ªÅ nh√†", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHU_HP) {
                                    if (select == 0) {
                                        this.createOtherMenu(player, ConstNpc.MENU_OPTION_PHU_HP,
                                                "Ta s·∫Ω gi√∫p ng∆∞∆°i tƒÉng HP l√™n m·ª©c kinh ho√†ng, ng∆∞∆°i ch·ªçn ƒëi",
                                                "x3 HP\n" + Util.numberToMoney(BlackBallWar.COST_X3) + " v√†ng",
                                                "x5 HP\n" + Util.numberToMoney(BlackBallWar.COST_X5) + " v√†ng",
                                                "x7 HP\n" + Util.numberToMoney(BlackBallWar.COST_X7) + " v√†ng",
                                                "T·ª´ ch·ªëi");
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_GO_HOME) {
                                    if (select == 0) {
                                        ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PHU_HP) {
                                    switch (select) {
                                        case 0:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X3);
                                            break;
                                        case 1:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X5);
                                            break;
                                        case 2:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X7);
                                            break;
                                        case 3:
                                            this.npcChat(player, "ƒê·ªÉ ta xem ng∆∞∆°i tr·ª• ƒë∆∞·ª£c bao l√¢u");
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.NPC_64:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën xem th√¥ng tin g√¨?",
                                        "Top\ns·ª©c m·∫°nh", "ƒê√≥ng");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        Service.getInstance().showTopPower(player);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BILL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën g√¨ n√†o?",
                                            "ƒê·ªïi ƒë·ªì\nh·ªßy di·ªát", getMenuSuKien(EVENT_SEVER), "ƒê√≥ng");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (this.mapId) {
                                    case 48:
                                        if (player.iDMark.isBaseMenu()) {
                                            switch (select) {
                                                case 0:
                                                    if (player.setClothes.godClothes || true) {
                                                        ShopService.gI().openShopBillHuyDiet(player,
                                                                ConstNpc.SHOP_BILL_HUY_DIET_0, 0);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Y√™u c·∫ßu c√≥ ƒë·ªß trang b·ªã th·∫ßn linh");
                                                    }
                                                    break;
                                                case 1:
                                                    switch (EVENT_SEVER) {
                                                        case 2:
                                                            Attribute at = ServerManager.gI().getAttributeManager()
                                                                    .find(ConstAttribute.SUC_DANH);
                                                            String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                    + Manager.SERVER_NAME + "\n "
                                                                    + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                    + player.event.getEventPoint()
                                                                    + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                    + EVENT_COUNT_THAN_HUY_DIET % 999 + "/999";
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                    at != null && !at.isExpired() ? text
                                                                    + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% s·ª©c ƒë√°nh,th·ªùi gian c√≤n l·∫°i "
                                                                    + at.getTime() / 60 + " ph√∫t."
                                                                    : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng tƒÉng 20% s·ª©c ƒë√°nh trong 60 ph√∫t\n",
                                                                    "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng",
                                                                    "T·∫∑ng\n99 B√¥ng", "ƒê·ªïi\nH·ªôp qu√†");
                                                            break;
                                                    }
                                            }
                                        } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                            openMenuSuKien(player, this, tempId, select);
                                        }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.WHIS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën g√¨ n√†o?",
                                            "ƒê·ªïi ƒë·ªì\nThi√™n S·ª©", "ƒê√≥ng");
                                } else if (this.mapId == 154) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën g√¨ n√†o",
                                            "Nh√¢ng c·∫•p\ntrang b·ªã\n Thi√™n s·ª©", "H·ªçc\n Tuy·ªát kƒ©");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (this.mapId) {
                                    case 48:
                                        switch (player.iDMark.getIndexMenu()) {
                                            case ConstNpc.BASE_MENU:
                                                if (select == 0) {
                                                    ShopService.gI().openShopWhisThienSu(player,
                                                            ConstNpc.SHOP_WHIS_THIEN_SU, 0);
                                                }
                                                break;
                                        }
                                        break;
                                    case 154:
                                        switch (player.iDMark.getIndexMenu()) {
                                            case ConstNpc.BASE_MENU:
                                                if (select == 0) {
                                                    CombineServiceNew.gI().openTabCombine(player,
                                                            CombineServiceNew.NANG_CAP_DO_THIEN_SU);
                                                    break;
                                                } else if (select == 1) {
                                                    int nBiKip = InventoryService.gI().getQuantity(player,
                                                            ConstItem.BI_KIP_TUYET_KY);
                                                    StringBuffer sb = new StringBuffer();
                                                    int skillID = player.gender == 0 ? 24
                                                            : player.gender == 1 ? 26 : 25;
                                                    Skill newSkill = SkillUtil.createSkill(skillID, 1);
                                                    sb.append("|2|Ta s·∫Ω d·∫°y ng∆∞∆°i tuy·ªát k·ªπ ")
                                                            .append(newSkill.template.name).append("\n")
                                                            .append("B√≠ ki tuy·ªát k·ªπ ").append(nBiKip).append("/9999\n")
                                                            .append("Gi√° v√†ng : 500.000.000 \n")
                                                            .append("Gi√° h·ªìng ng·ªçc: 200");
                                                    ConfirmDialog confirmDialog = new ConfirmDialog(sb.toString(),
                                                            () -> {
                                                                Item item = InventoryService.gI().findItem(player,
                                                                        ConstItem.BI_KIP_TUYET_KY, 9999);
                                                                if (item == null) {
                                                                    Service.getInstance().sendThongBao(player,
                                                                            "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                                                                    return;
                                                                }
                                                                Inventory inv = player.inventory;
                                                                if (inv.gold < 500000000 || inv.ruby < 200) {
                                                                    Service.getInstance().sendThongBao(player,
                                                                            "Kh√¥ng ƒë·ªß ti·ªÅn");
                                                                }
                                                                inv.subGold(500000000);
                                                                inv.subRuby(200);
                                                                SkillUtil.setSkill(player, newSkill);
                                                                InventoryService.gI().subQuantityItemsBag(player, item,
                                                                        9999);
                                                                try {
                                                                    Message msg = Service.getInstance()
                                                                            .messageSubCommand((byte) 23);
                                                                    msg.writer().writeShort(newSkill.skillId);
                                                                    player.sendMessage(msg);
                                                                    msg.cleanup();
                                                                } catch (IOException e) {
                                                                }
                                                            });
                                                    confirmDialog.show(player);
                                                }
                                                break;
                                            case ConstNpc.MENU_START_COMBINE: {
                                                switch (player.combineNew.typeCombine) {
                                                    case CombineServiceNew.NANG_CAP_DO_THIEN_SU:
                                                        if (select == 0) {
                                                            CombineServiceNew.gI().startCombine(player);
                                                        }
                                                        break;
                                                }
                                            }
                                            break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BO_MONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47 || this.mapId == 84) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Xin ch√†o, c·∫≠u mu·ªën t√¥i gi√∫p g√¨?",
                                            "Nhi·ªám v·ª•\nh√†ng ng√†y", "M√£ qu√† t·∫∑ng", "Nh·∫≠n ng·ªçc\nmi·ªÖn ph√≠", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47 || this.mapId == 84) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.playerTask.sideTask.template != null) {
                                                    String npcSay = "Nhi·ªám v·ª• hi·ªán t·∫°i: "
                                                            + player.playerTask.sideTask.getName() + " ("
                                                            + player.playerTask.sideTask.getLevel() + ")"
                                                            + "\nHi·ªán t·∫°i ƒë√£ ho√†n th√†nh: "
                                                            + player.playerTask.sideTask.count + "/"
                                                            + player.playerTask.sideTask.maxCount + " ("
                                                            + player.playerTask.sideTask.getPercentProcess()
                                                            + "%)\nS·ªë nhi·ªám v·ª• c√≤n l·∫°i trong ng√†y: "
                                                            + player.playerTask.sideTask.leftTask + "/"
                                                            + ConstTask.MAX_SIDE_TASK;
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_PAY_SIDE_TASK,
                                                            npcSay, "Tr·∫£ nhi·ªám\nv·ª•", "H·ªßy nhi·ªám\nv·ª•");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK,
                                                            "T√¥i c√≥ v√†i nhi·ªám v·ª• theo c·∫•p b·∫≠c, "
                                                            + "s·ª©c c·∫≠u c√≥ th·ªÉ l√†m ƒë∆∞·ª£c c√°i n√†o?",
                                                            "D·ªÖ", "B√¨nh th∆∞·ªùng", "Kh√≥", "Si√™u kh√≥", "T·ª´ ch·ªëi");
                                                }
                                                break;

                                            case 1:
                                                Input.gI().createFormGiftCode(player);
                                                break;
                                            case 2:
                                                TaskService.gI().checkDoneAchivements(player);
                                                TaskService.gI().sendAchivement(player);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                            case 1:
                                            case 2:
                                            case 3:
                                                TaskService.gI().changeSideTask(player, (byte) select);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PAY_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                                TaskService.gI().paySideTask(player);
                                                break;
                                            case 1:
                                                TaskService.gI().removeSideTask(player);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 80) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?", "T·ªõi h√†nh tinh\nYardart",
                                            "T·ª´ ch·ªëi");
                                } else if (this.mapId == 131) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        if (this.mapId == 80) {
                                            // if (select == 0) {
                                            // if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_24_0) {
                                            // ChangeMapService.gI().changeMapBySpaceShip(player, 160, -1, 168);
                                            // } else {
                                            // this.npcChat(player, "Xin l·ªói, t√¥i ch∆∞a th·ªÉ ƒë∆∞a c·∫≠u t·ªõi n∆°i ƒë√≥ l√∫c
                                            // n√†y...");
                                            // }
                                            // } else
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 131, -1, 940);
                                            }
                                        } else if (this.mapId == 131) {
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 80, -1, 870);
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ_:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong
                                                + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart",
                                                "H·ªçc d·ªãch\nchuy·ªÉn", "ƒê√≥ng");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong
                                                + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart",
                                                "ƒê√≥ng");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000 && InventoryService.gI().getCountEmptyBag(player) > 0) {
                                        Item yardart = ItemService.gI().createNewItem((short) (player.gender + 592));
                                        yardart.itemOptions.add(new ItemOption(47, 400));
                                        yardart.itemOptions.add(new ItemOption(108, 10));
                                        InventoryService.gI().addItemBag(player, yardart);
                                        InventoryService.gI().subQuantityItemsBag(player, biKiep, 10000);
                                        InventoryService.gI().sendItemBags(player);
                                        Service.getInstance().sendThongBao(player,
                                                "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c trang ph·ª•c t·ªôc Yardart");
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GHI_DANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        String[] menuselect = new String[]{};

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == ConstMap.DAI_HOI_VO_THUAT) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi ƒë·∫°i h·ªôi v√µ thu·∫≠t", "ƒê·∫°i H·ªôi\nV√µ Thu·∫≠t\nL·∫ßn Th·ª©\n23");
                                } else if (this.mapId == ConstMap.DAI_HOI_VO_THUAT_129) {
                                    int goldchallenge = player.goldChallenge;
                                    if (player.levelWoodChest == 0) {
                                        menuselect = new String[]{
                                            "Thi ƒë·∫•u\n" + Util.numberToMoney(goldchallenge) + " v√†ng",
                                            "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"};
                                    } else {
                                        menuselect = new String[]{
                                            "Thi ƒë·∫•u\n" + Util.numberToMoney(goldchallenge) + " v√†ng",
                                            "Nh·∫≠n th∆∞·ªüng\nR∆∞∆°ng c·∫•p\n" + player.levelWoodChest,
                                            "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"};
                                    }
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·∫°i h·ªôi v√µ thu·∫≠t l·∫ßn th·ª© 23\nDi·ªÖn ra b·∫•t k·ªÉ ng√†y ƒë√™m,ng√†y ngh·ªâ ng√†y l·ªÖ\nPh·∫ßn th∆∞·ªüng v√¥ c√πng qu√Ω gi√°\nNhanh ch√≥ng tham gia n√†o",
                                            menuselect, "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        if (this.mapId == ConstMap.DAI_HOI_VO_THUAT) {
                                            switch (select) {
                                                case 0:
                                                    ChangeMapService.gI().changeMapNonSpaceship(player,
                                                            ConstMap.DAI_HOI_VO_THUAT_129, player.location.x, 360);
                                                    break;
                                            }
                                        } else if (this.mapId == ConstMap.DAI_HOI_VO_THUAT_129) {
                                            int goldchallenge = player.goldChallenge;
                                            if (player.levelWoodChest == 0) {
                                                switch (select) {
                                                    case 0:
                                                        if (InventoryService.gI().finditemWoodChest(player)) {
                                                            if (player.inventory.getGold() >= goldchallenge) {
                                                                MartialCongressService.gI().startChallenge(player);
                                                                player.inventory.subGold(goldchallenge);
                                                                PlayerService.gI().sendInfoHpMpMoney(player);
                                                                player.goldChallenge += 2000000;
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                        + Util.numberToMoney(goldchallenge
                                                                                - player.inventory.gold)
                                                                        + " v√†ng");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                        }
                                                        break;
                                                    case 1:
                                                        ChangeMapService.gI().changeMapNonSpaceship(player,
                                                                ConstMap.DAI_HOI_VO_THUAT, player.location.x, 336);
                                                        break;
                                                }
                                            } else {
                                                switch (select) {
                                                    case 0:
                                                        if (InventoryService.gI().finditemWoodChest(player)) {
                                                            if (player.inventory.getGold() >= goldchallenge) {
                                                                MartialCongressService.gI().startChallenge(player);
                                                                player.inventory.subGold(goldchallenge);
                                                                PlayerService.gI().sendInfoHpMpMoney(player);
                                                                player.goldChallenge += 2000000;
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                        + Util.numberToMoney(goldchallenge
                                                                                - player.inventory.gold)
                                                                        + " v√†ng");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                        }
                                                        break;
                                                    case 1:
                                                        if (!player.receivedWoodChest) {
                                                            if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                                Item it = ItemService.gI()
                                                                        .createNewItem((short) ConstItem.RUONG_GO);
                                                                it.itemOptions
                                                                        .add(new ItemOption(72, player.levelWoodChest));
                                                                it.itemOptions.add(new ItemOption(30, 0));
                                                                it.createTime = System.currentTimeMillis();
                                                                InventoryService.gI().addItemBag(player, it);
                                                                InventoryService.gI().sendItemBags(player);

                                                                player.receivedWoodChest = true;
                                                                player.levelWoodChest = 0;
                                                                Service.getInstance().sendThongBao(player,
                                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c r∆∞∆°ng g·ªó");
                                                            } else {
                                                                this.npcChat(player, "H√†nh trang ƒë√£ ƒë·∫ßy");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "M·ªói ng√†y ch·ªâ c√≥ th·ªÉ nh·∫≠n r∆∞∆°ng b√°u 1 l·∫ßn");
                                                        }
                                                        break;
                                                    case 2:
                                                        ChangeMapService.gI().changeMapNonSpaceship(player,
                                                                ConstMap.DAI_HOI_VO_THUAT, player.location.x, 336);
                                                        break;
                                                }
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.NOI_BANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o " + player.name + "\nT√¥i l√† n·ªìi n·∫•u b√°nh\nT√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n",
                                        "L√†m\nB√°nh T√©t", "L√†m\nB√°nh Ch∆∞ng", getMenuLamBanh(player, 0),
                                        getMenuLamBanh(player, 1), "ƒê·ªïi H·ªôp\nQu√† T·∫øt");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 0:
                                                Item thitBaChi = InventoryService.gI().findItem(player,
                                                        ConstItem.THIT_BA_CHI, 99);
                                                Item gaoNep = InventoryService.gI().findItem(player, ConstItem.GAO_NEP,
                                                        99);
                                                Item doXanh = InventoryService.gI().findItem(player, ConstItem.DO_XANH,
                                                        99);
                                                Item laChuoi = InventoryService.gI().findItem(player,
                                                        ConstItem.LA_CHUOI, 99);
                                                if (thitBaChi != null && gaoNep != null && doXanh != null
                                                        && laChuoi != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, thitBaChi, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, gaoNep, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, doXanh, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, laChuoi, 99);
                                                    Item banhtet = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_TET_2023);
                                                    banhtet.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, banhtet);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh T√©t");
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 1:
                                                Item thitHeo1 = InventoryService.gI().findItem(player,
                                                        ConstItem.THIT_HEO_2023, 99);
                                                Item gaoNep1 = InventoryService.gI().findItem(player, ConstItem.GAO_NEP,
                                                        99);
                                                Item doXanh1 = InventoryService.gI().findItem(player, ConstItem.DO_XANH,
                                                        99);
                                                Item laDong1 = InventoryService.gI().findItem(player,
                                                        ConstItem.LA_DONG_2023, 99);
                                                if (thitHeo1 != null && gaoNep1 != null && doXanh1 != null
                                                        && laDong1 != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, thitHeo1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, gaoNep1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, doXanh1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, laDong1, 99);
                                                    Item banhChung = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_CHUNG_2023);
                                                    banhChung.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, banhChung);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh Ch∆∞ng");
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 2:
                                                if (!player.event.isCookingTetCake()) {
                                                    Item banhTet2 = InventoryService.gI().findItem(player,
                                                            ConstItem.BANH_TET_2023, 1);
                                                    Item phuGiaTaoMau2 = InventoryService.gI().findItem(player,
                                                            ConstItem.PHU_GIA_TAO_MAU, 1);
                                                    Item giaVi2 = InventoryService.gI().findItem(player,
                                                            ConstItem.GIA_VI_TONG_HOP, 1);

                                                    if (banhTet2 != null && phuGiaTaoMau2 != null && giaVi2 != null) {
                                                        InventoryService.gI().subQuantityItemsBag(player, banhTet2, 1);
                                                        InventoryService.gI().subQuantityItemsBag(player, phuGiaTaoMau2,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, giaVi2, 1);
                                                        InventoryService.gI().sendItemBags(player);
                                                        player.event.setTimeCookTetCake(300);
                                                        player.event.setCookingTetCake(true);
                                                        Service.getInstance().sendThongBao(player,
                                                                "B·∫Øt ƒë·∫ßu n·∫•u b√°nh,th·ªùi gian n·∫•u b√°nh l√† 5 ph√∫t");
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                    }
                                                } else if (player.event.isCookingTetCake()
                                                        && player.event.getTimeCookTetCake() == 0) {
                                                    Item cake = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_TET_CHIN, 1);
                                                    cake.itemOptions.add(new ItemOption(77, 20));
                                                    cake.itemOptions.add(new ItemOption(103, 20));
                                                    cake.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, cake);
                                                    InventoryService.gI().sendItemBags(player);
                                                    player.event.setCookingTetCake(false);
                                                    player.event.addEventPoint(1);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh T√©t (ƒë√£ ch√≠nh) v√† 1 ƒëi·ªÉm s·ª± ki·ªán");
                                                }
                                                break;
                                            case 3:
                                                if (!player.event.isCookingChungCake()) {
                                                    Item banhChung3 = InventoryService.gI().findItem(player,
                                                            ConstItem.BANH_CHUNG_2023, 1);
                                                    Item phuGiaTaoMau3 = InventoryService.gI().findItem(player,
                                                            ConstItem.PHU_GIA_TAO_MAU, 1);
                                                    Item giaVi3 = InventoryService.gI().findItem(player,
                                                            ConstItem.GIA_VI_TONG_HOP, 1);

                                                    if (banhChung3 != null && phuGiaTaoMau3 != null && giaVi3 != null) {
                                                        InventoryService.gI().subQuantityItemsBag(player, banhChung3,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, phuGiaTaoMau3,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, giaVi3, 1);
                                                        InventoryService.gI().sendItemBags(player);
                                                        player.event.setTimeCookChungCake(300);
                                                        player.event.setCookingChungCake(true);
                                                        Service.getInstance().sendThongBao(player,
                                                                "B·∫Øt ƒë·∫ßu n·∫•u b√°nh,th·ªùi gian n·∫•u b√°nh l√† 5 ph√∫t");
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                    }
                                                } else if (player.event.isCookingChungCake()
                                                        && player.event.getTimeCookChungCake() == 0) {
                                                    Item cake = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_CHUNG_CHIN, 1);
                                                    cake.itemOptions.add(new ItemOption(50, 20));
                                                    cake.itemOptions.add(new ItemOption(5, 15));
                                                    cake.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, cake);
                                                    InventoryService.gI().sendItemBags(player);
                                                    player.event.setCookingChungCake(false);
                                                    player.event.addEventPoint(1);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh Ch∆∞ng (ƒë√£ ch√≠n) v√† 1 ƒëi·ªÉm s·ª± ki·ªán");
                                                }
                                                break;
                                            case 4:
                                                Item tetCake = InventoryService.gI().findItem(player,
                                                        ConstItem.BANH_TET_CHIN, 5);
                                                Item chungCake = InventoryService.gI().findItem(player,
                                                        ConstItem.BANH_CHUNG_CHIN, 5);
                                                if (chungCake != null && tetCake != null) {
                                                    Item hopQua = ItemService.gI()
                                                            .createNewItem((short) ConstItem.HOP_QUA_TET_2023, 1);
                                                    hopQua.itemOptions.add(new ItemOption(30, 0));
                                                    hopQua.itemOptions.add(new ItemOption(74, 0));

                                                    InventoryService.gI().subQuantityItemsBag(player, tetCake, 5);
                                                    InventoryService.gI().subQuantityItemsBag(player, chungCake, 5);
                                                    InventoryService.gI().addItemBag(player, hopQua);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c H·ªôp qu√† t·∫øt");
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Kh√¥ng ƒë·ªß nguy√™n li·ªáu ƒë·ªÉ ƒë·ªïi");
                                                }
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CUA_HANG_KY_GUI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "C·ªßa h√†ng ch√∫ng t√¥i chuy√™n b√°n h√†ng hi·ªáu,h√†ng ƒë·ªôc,n·∫øu b·∫°n kh√¥ng ch√™ th√¨ m·∫°i ƒëz√¥",
                                        "Kh√¥ng c√≥\nH∆∞·ªõng d·∫´n", "Mua b√°n", "Danh s√°ch\nH·∫øt H·∫°n", "H·ªßy");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 1:
                                                if (!Manager.gI().getGameConfig().isOpenSuperMarket()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Ch·ª©c nƒÉng k√≠ g·ª≠i ch∆∞a m·ªü,vui l√≤ng quay l·∫°i sau");
                                                    return;
                                                }
                                                ConsignmentShop.getInstance().show(player);
                                                break;
                                            case 2:
                                                ConsignmentShop.getInstance().showExpiringItems(player);
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                default:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                super.openBaseMenu(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                // ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0,
                                // player.gender);
                            }
                        }
                    };
            }
        } catch (Exception e) {
            Log.error(NpcFactory.class, e, "L·ªói load npc");
        }
        return npc;
    }

// girlkun75-mark
    public static void createNpcRongThieng() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.RONG_THIENG, -1) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.SHENRON_CONFIRM:
                        if (select == 0) {
                            SummonDragon.gI().confirmWish();
                        } else if (select == 1) {
                            SummonDragon.gI().reOpenShenronWishes(player);
                        }
                        break;
                    case ConstNpc.SHENRON_1_1:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_1
                                && select == SHENRON_1_STAR_WISHES_1.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_2, SHENRON_SAY,
                                    SHENRON_1_STAR_WISHES_2);
                            break;
                        }
                    case ConstNpc.SHENRON_1_2:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_2
                                && select == SHENRON_1_STAR_WISHES_2.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_1, SHENRON_SAY,
                                    SHENRON_1_STAR_WISHES_1);
                            break;
                        }
                    case ConstNpc.BLACK_SHENRON:
                        if (player.iDMark.getIndexMenu() == ConstNpc.BLACK_SHENRON
                                && select == BLACK_SHENRON_WISHES.length) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.BLACK_SHENRON, BLACK_SHENRON_SAY,
                                    BLACK_SHENRON_WISHES);
                            break;
                        }
                    case ConstNpc.ICE_SHENRON:
                        if (player.iDMark.getIndexMenu() == ConstNpc.ICE_SHENRON
                                && select == ICE_SHENRON_WISHES.length) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.ICE_SHENRON, ICE_SHENRON_SAY,
                                    ICE_SHENRON_WISHES);
                            break;
                        }
                    default:
                        SummonDragon.gI().showConfirmShenron(player, player.iDMark.getIndexMenu(), (byte) select);
                        break;
                }
            }
        };
    }

    public static void createNpcConMeo() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.CON_MEO, 351) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {
                    case ConstNpc.CONFIRM_DIALOG:
                        ConfirmDialog confirmDialog = player.getConfirmDialog();
                        if (confirmDialog != null) {
                            if (confirmDialog instanceof MenuDialog menu) {
                                menu.getRunable().setIndexSelected(select);
                                menu.run();
                                return;
                            }
                            if (select == 0) {
                                confirmDialog.run();
                            } else {
                                confirmDialog.cancel();
                            }
                            player.setConfirmDialog(null);
                        }
                        break;
                    case ConstNpc.UP_TOP_ITEM:

                        break;
                    case ConstNpc.RUONG_GO:
                        int size = player.textRuongGo.size();
                        if (size > 0) {
                            String menuselect = "OK [" + (size - 1) + "]";
                            if (size == 1) {
                                menuselect = "OK";
                            }
                            NpcService.gI().createMenuConMeo(player, ConstNpc.RUONG_GO, -1,
                                    player.textRuongGo.get(size - 1), menuselect);
                            player.textRuongGo.remove(size - 1);
                        }
                        break;
                    case ConstNpc.MENU_MABU_WAR:
                        if (select == 0) {
                            if (player.zone.finishMabuWar) {
                                ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                            } else if (player.zone.map.mapId == 119) {
                                Zone zone = MabuWar.gI().getMapLastFloor(120);
                                if (zone != null) {
                                    ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                } else {
                                    Service.getInstance().sendThongBao(player,
                                            "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                    ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                }
                            } else {
                                int idMapNextFloor = player.zone.map.mapId == 115 ? player.zone.map.mapId + 2
                                        : player.zone.map.mapId + 1;
                                ChangeMapService.gI().changeMap(player, idMapNextFloor, -1, 354, 240);
                            }
                            player.resetPowerPoint();
                            player.sendMenuGotoNextFloorMabuWar = false;
                            Service.getInstance().sendPowerInfo(player, "TL", player.getPowerPoint());
                            if (Util.isTrue(1, 30)) {
                                player.inventory.ruby += 1;
                                PlayerService.gI().sendInfoHpMpMoney(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                            }
                        }
                        break;
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.MAKE_MATCH_PVP:
                        // PVP_old.gI().sendInvitePVP(player, (byte) select);
                        PVPServcice.gI().sendInvitePVP(player, (byte) select);
                        break;
                    case ConstNpc.MAKE_FRIEND:
                        if (select == 0) {
                            Object playerId = PLAYERID_OBJECT.get(player.id);
                            if (playerId != null) {
                                FriendAndEnemyService.gI().acceptMakeFriend(player,
                                        Integer.parseInt(String.valueOf(playerId)));
                            }
                        }
                        break;
                    case ConstNpc.REVENGE:
                        if (select == 0) {
                            PVPServcice.gI().acceptRevenge(player);
                        }
                        break;
                    case ConstNpc.TUTORIAL_SUMMON_DRAGON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        }
                        break;
                    case ConstNpc.SUMMON_SHENRON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        } else if (select == 1) {
                            SummonDragon.gI().summonShenron(player);
                        }
                        break;
                    case ConstNpc.SUMMON_BLACK_SHENRON:
                        if (select == 0) {
                            SummonDragon.gI().summonBlackShenron(player);
                        }
                        break;
                    case ConstNpc.SUMMON_ICE_SHENRON:
                        if (select == 0) {
                            SummonDragon.gI().summonIceShenron(player);
                        }
                        break;
                    case ConstNpc.INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().showAllIntrinsic(player);
                        } else if (select == 1) {
                            IntrinsicService.gI().showConfirmOpen(player);
                        } else if (select == 2) {
                            IntrinsicService.gI().showConfirmOpenVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().open(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC_VIP:
                        if (select == 0) {
                            IntrinsicService.gI().openVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_LEAVE_CLAN:
                        if (select == 0) {
                            ClanService.gI().leaveClan(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_NHUONG_PC:
                        if (select == 0) {
                            ClanService.gI().phongPc(player, (int) PLAYERID_OBJECT.get(player.id));
                        }
                        break;
                    case ConstNpc.BAN_PLAYER:
                        if (select == 0) {
                            PlayerService.gI().banPlayer((Player) PLAYERID_OBJECT.get(player.id));
                            Service.getInstance().sendThongBao(player,
                                    "Ban ng∆∞·ªùi ch∆°i " + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                        }
                        break;
                    case ConstNpc.BUFF_PET:
                        if (select == 0) {
                            Player pl = (Player) PLAYERID_OBJECT.get(player.id);
                            if (pl.pet == null) {
                                PetService.gI().createNormalPet(pl);
                                Service.getInstance().sendThongBao(player, "Ph√°t ƒë·ªá t·ª≠ cho "
                                        + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                            }
                        }
                        break;
                    case ConstNpc.MENU_ADMIN:
                        switch (select) {
                            case 0:
                                for (int i = 14; i <= 20; i++) {
                                    Item item = ItemService.gI().createNewItem((short) i);
                                    InventoryService.gI().addItemBag(player, item);
                                }
                                InventoryService.gI().sendItemBags(player);
                                break;
                            case 1:
                                if (player.pet == null) {
                                    PetService.gI().createNormalPet(player);
                                } else {
                                    if (player.pet.isMabu) {
                                        PetService.gI().changeNormalPet(player);
                                    } else {
                                        PetService.gI().changeMabuPet(player);
                                    }
                                }
                                break;
                            case 2:
                                // PlayerService.gI().baoTri();
                                Maintenance.gI().start(60);
                                break;
                            case 3:
                                Input.gI().createFormFindPlayer(player);
                                break;
                            case 4:
                                NotiManager.getInstance().load();
                                NotiManager.getInstance().sendAlert(player);
                                NotiManager.getInstance().sendNoti(player);
                                Service.getInstance().chat(player, "C·∫≠p nh·∫≠t th√¥ng b√°o th√†nh c√¥ng");
                                break;
                        }
                        break;
                    case ConstNpc.CONFIRM_REMOVE_ALL_ITEM_LUCKY_ROUND:
                        if (select == 0) {
                            for (int i = 0; i < player.inventory.itemsBoxCrackBall.size(); i++) {
                                player.inventory.itemsBoxCrackBall.set(i, ItemService.gI().createItemNull());
                            }
                            Service.getInstance().sendThongBao(player, "ƒê√£ x√≥a h·∫øt v·∫≠t ph·∫©m trong r∆∞∆°ng");
                        }
                        break;
                    case ConstNpc.MENU_FIND_PLAYER:
                        Player p = (Player) PLAYERID_OBJECT.get(player.id);
                        if (p != null) {
                            switch (select) {
                                case 0:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMapYardrat(player, p.zone, p.location.x,
                                                p.location.y);
                                    }
                                    break;
                                case 1:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMap(p, player.zone, player.location.x,
                                                player.location.y);
                                    }
                                    break;
                                case 2:
                                    if (p != null) {
                                        Input.gI().createFormChangeName(player, p);
                                    }
                                    break;
                                case 3:
                                    if (p != null) {
                                        String[] selects = new String[]{"ƒê·ªìng √Ω", "H·ªßy"};
                                        NpcService.gI().createMenuConMeo(player, ConstNpc.BAN_PLAYER, -1,
                                                "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ban " + p.name, selects, p);
                                    }
                                    break;
                            }
                        }
                        break;
                }
            }
        };
    }

    public static void openMenuSuKien(Player player, Npc npc, int tempId, int select) {
        switch (Manager.EVENT_SEVER) {
            case 0:
                break;
            case 1:// hlw
                switch (select) {
                    case 0:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item keo = InventoryService.gI().finditemnguyenlieuKeo(player);
                            Item banh = InventoryService.gI().finditemnguyenlieuBanh(player);
                            Item bingo = InventoryService.gI().finditemnguyenlieuBingo(player);

                            if (keo != null && banh != null && bingo != null) {
                                Item GioBingo = ItemService.gI().createNewItem((short) 2016, 1);

                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, keo, 10);
                                InventoryService.gI().subQuantityItemsBag(player, banh, 10);
                                InventoryService.gI().subQuantityItemsBag(player, bingo, 10);

                                GioBingo.itemOptions.add(new ItemOption(74, 0));
                                InventoryService.gI().addItemBag(player, GioBingo);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x10 Nguy√™n Li·ªáu K·∫πo, B√°nh Quy, B√≠ Ng√¥ ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    case 1:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                            Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);

                            if (ve != null && giokeo != null) {
                                Item Hopmaquy = ItemService.gI().createNewItem((short) 2017, 1);
                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);

                                Hopmaquy.itemOptions.add(new ItemOption(74, 0));
                                InventoryService.gI().addItemBag(player, Hopmaquy);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    case 2:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                            Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);
                            Item hopmaquy = InventoryService.gI().finditemnguyenlieuHopmaquy(player);

                            if (ve != null && giokeo != null && hopmaquy != null) {
                                Item HopQuaHLW = ItemService.gI().createNewItem((short) 2012, 1);
                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);
                                InventoryService.gI().subQuantityItemsBag(player, hopmaquy, 3);

                                HopQuaHLW.itemOptions.add(new ItemOption(74, 0));
                                HopQuaHLW.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, HopQuaHLW);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player,
                                        "ƒê·ªïi qu√† h·ªôp qu√† s·ª± ki·ªán Halloween th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x3 H·ªôp Ma Qu·ª∑, x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                }
                break;
            case 2:// 20/11
                switch (select) {
                    case 3:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            int evPoint = player.event.getEventPoint();
                            if (evPoint >= 999) {
                                Item HopQua = ItemService.gI().createNewItem((short) 2021, 1);
                                player.event.setEventPoint(evPoint - 999);

                                HopQua.itemOptions.add(new ItemOption(74, 0));
                                HopQua.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, HopQua);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c H·ªôp Qu√† Teacher Day");
                            } else {
                                Service.getInstance().sendThongBao(player, "C·∫ßn 999 ƒëi·ªÉm t√≠ch l≈©y ƒë·ªÉ ƒë·ªïi");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    // case 4:
                    // ShopService.gI().openShopSpecial(player, npc, ConstNpc.SHOP_HONG_NGOC, 0,
                    // -1);
                    // break;
                    default:
                        int n = 0;
                        switch (select) {
                            case 0:
                                n = 1;
                                break;
                            case 1:
                                n = 10;
                                break;
                            case 2:
                                n = 99;
                                break;
                        }

                        if (n > 0) {
                            Item bonghoa = InventoryService.gI().finditemBongHoa(player, n);
                            if (bonghoa != null) {
                                int evPoint = player.event.getEventPoint();
                                player.event.setEventPoint(evPoint + n);
                                ;
                                InventoryService.gI().subQuantityItemsBag(player, bonghoa, n);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + n + " ƒëi·ªÉm s·ª± ki·ªán");
                                int pre;
                                int next;
                                String text = null;
                                AttributeManager am = ServerManager.gI().getAttributeManager();
                                switch (tempId) {
                                    case ConstNpc.THAN_MEO_KARIN:
                                        pre = EVENT_COUNT_THAN_MEO / 999;
                                        EVENT_COUNT_THAN_MEO += n;
                                        next = EVENT_COUNT_THAN_MEO / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.TNSM, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß tƒÉng ƒë∆∞·ª£c 20% TNSM cho ƒë·ªá t·ª≠ khi ƒë√°nh qu√°i trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.QUY_LAO_KAME:
                                        pre = EVENT_COUNT_QUY_LAO_KAME / 999;
                                        EVENT_COUNT_QUY_LAO_KAME += n;
                                        next = EVENT_COUNT_QUY_LAO_KAME / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.VANG, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 100% v√†ng t·ª´ qu√°i trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.THUONG_DE:
                                        pre = EVENT_COUNT_THUONG_DE / 999;
                                        EVENT_COUNT_THUONG_DE += n;
                                        next = EVENT_COUNT_THUONG_DE / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.KI, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% KI trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.THAN_VU_TRU:
                                        pre = EVENT_COUNT_THAN_VU_TRU / 999;
                                        EVENT_COUNT_THAN_VU_TRU += n;
                                        next = EVENT_COUNT_THAN_VU_TRU / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.HP, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% HP trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.BILL:
                                        pre = EVENT_COUNT_THAN_HUY_DIET / 999;
                                        EVENT_COUNT_THAN_HUY_DIET += n;
                                        next = EVENT_COUNT_THAN_HUY_DIET / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.SUC_DANH, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% S·ª©c ƒë√°nh trong 60 ph√∫t.";
                                        }
                                        break;
                                }
                                if (text != null) {
                                    Service.getInstance().sendThongBaoAllPlayer(text);
                                }

                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                        }
                }
                break;
            case 3:
                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                    Item keogiangsinh = InventoryService.gI().finditemKeoGiangSinh(player);

                    if (keogiangsinh != null && keogiangsinh.quantity >= 99) {
                        Item tatgiangsinh = ItemService.gI().createNewItem((short) 649, 1);
                        // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                        InventoryService.gI().subQuantityItemsBag(player, keogiangsinh, 99);

                        tatgiangsinh.itemOptions.add(new ItemOption(74, 0));
                        tatgiangsinh.itemOptions.add(new ItemOption(30, 0));
                        InventoryService.gI().addItemBag(player, tatgiangsinh);
                        InventoryService.gI().sendItemBags(player);
                        Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c T·∫•t,v·ªõ gi√°ng sinh");
                    } else {
                        Service.getInstance().sendThongBao(player,
                                "Vui l√≤ng chu·∫©n b·ªã x99 k·∫πo gi√°ng sinh ƒë·ªÉ ƒë·ªïi v·ªõ t·∫•t gi√°ng sinh");
                    }
                } else {
                    Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                }
                break;
            case 4:
                switch (select) {
                    case 0:
                        if (!player.event.isReceivedLuckyMoney()) {
                            Calendar cal = Calendar.getInstance();
                            int day = cal.get(Calendar.DAY_OF_MONTH);
                            if (day >= 22 && day <= 24) {
                                Item goldBar = ItemService.gI().createNewItem((short) ConstItem.THOI_VANG,
                                        Util.nextInt(1, 3));
                                player.inventory.ruby += Util.nextInt(10, 30);
                                goldBar.quantity = Util.nextInt(1, 3);
                                InventoryService.gI().addItemBag(player, goldBar);
                                InventoryService.gI().sendItemBags(player);
                                PlayerService.gI().sendInfoHpMpMoney(player);
                                player.event.setReceivedLuckyMoney(true);
                                Service.getInstance().sendThongBao(player,
                                        "Nh·∫≠n l√¨ x√¨ th√†nh c√¥ng,ch√∫c b·∫°n nƒÉm m·ªõi dui d·∫ª");
                            } else if (day > 24) {
                                Service.getInstance().sendThongBao(player, "H·∫øt t·∫øt r·ªìi c√≤n ƒë√≤i l√¨ x√¨");
                            } else {
                                Service.getInstance().sendThongBao(player, "ƒê√£ t·∫øt ƒë√¢u m√† ƒë√≤i l√¨ x√¨");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n l√¨ x√¨ r·ªìi");
                        }
                        break;
                    case 1:
                        ShopService.gI().openShopNormal(player, npc, ConstNpc.SHOP_SU_KIEN_TET, 1, -1);
                        break;
                }
                break;
            case ConstEvent.SU_KIEN_8_3:
                switch (select) {
                    case 3:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            int evPoint = player.event.getEventPoint();
                            if (evPoint >= 999) {
                                Item capsule = ItemService.gI().createNewItem((short) 2052, 1);
                                player.event.setEventPoint(evPoint - 999);

                                capsule.itemOptions.add(new ItemOption(74, 0));
                                capsule.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, capsule);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c Capsule H·ªìng");
                            } else {
                                Service.getInstance().sendThongBao(player, "C·∫ßn 999 ƒëi·ªÉm t√≠ch l≈©y ƒë·ªÉ ƒë·ªïi");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    default:
                        int n = 0;
                        switch (select) {
                            case 0:
                                n = 1;
                                break;
                            case 1:
                                n = 10;
                                break;
                            case 2:
                                n = 99;
                                break;
                        }

                        if (n > 0) {
                            Item bonghoa = InventoryService.gI().finditemBongHoa(player, n);
                            if (bonghoa != null) {
                                int evPoint = player.event.getEventPoint();
                                player.event.setEventPoint(evPoint + n);
                                InventoryService.gI().subQuantityItemsBag(player, bonghoa, n);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + n + " ƒëi·ªÉm s·ª± ki·ªán");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                        }
                }
                break;
        }
    }

    public static String getMenuSuKien(int id) {
        switch (id) {
            case ConstEvent.KHONG_CO_SU_KIEN:
                return "Ch∆∞a c√≥\n S·ª± Ki·ªán";
            case ConstEvent.SU_KIEN_HALLOWEEN:
                return "S·ª± Ki·ªán\nHaloween";
            case ConstEvent.SU_KIEN_20_11:
                return "S·ª± Ki·ªán\n 20/11";
            case ConstEvent.SU_KIEN_NOEL:
                return "S·ª± Ki·ªán\n Gi√°ng Sinh";
            case ConstEvent.SU_KIEN_TET:
                return "S·ª± Ki·ªán\n T·∫øt Nguy√™n\nƒê√°n 2023";
            case ConstEvent.SU_KIEN_8_3:
                return "S·ª± Ki·ªán\n 8/3";
        }
        return "Ch∆∞a c√≥\n S·ª± Ki·ªán";
    }

    public static String getMenuLamBanh(Player player, int type) {
        switch (type) {
            case 0:// b√°nh t√©t
                if (player.event.isCookingTetCake()) {
                    int timeCookTetCake = player.event.getTimeCookTetCake();
                    if (timeCookTetCake == 0) {
                        return "L·∫•y b√°nh";
                    } else if (timeCookTetCake > 0) {
                        return "ƒêang n·∫•u\nB√°nh T√©t\nC√≤n " + TimeUtil.secToTime(timeCookTetCake);
                    }
                } else {
                    return "N·∫•u\nB√°nh T√©t";
                }
                break;
            case 1:// b√°nh ch∆∞ng
                if (player.event.isCookingChungCake()) {
                    int timeCookChungCake = player.event.getTimeCookChungCake();
                    if (timeCookChungCake == 0) {
                        return "L·∫•y b√°nh";
                    } else if (timeCookChungCake > 0) {
                        return "ƒêang n·∫•u\nB√°nh Ch∆∞ng\nC√≤n " + TimeUtil.secToTime(timeCookChungCake);
                    }
                } else {
                    return "N·∫•u\nB√°nh Ch∆∞ng";
                }
                break;
        }
        return "";
    }

}
